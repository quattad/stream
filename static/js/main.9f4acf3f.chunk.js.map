{"version":3,"sources":["assets/img/login.jpg","assets/img/register.jpg","services/AuthReducer.js","components/dashboard/Navbar.Profile.components.js","components/Navbar.components.js","components/TransparentFooter.js","components/HomePublic.components.js","components/LoginPublic.components.js","components/RegisterPublic.components.js","components/About.components.js","components/TeamsPrivate.components.js","components/ProjectsPrivate.components.js","components/ProjectSpinner.components.js","components/dashboard/WelcomeText.components.js","components/dashboard/ProjectsTableHeader.components.js","components/dashboard/ProjectsTableButton.components.js","components/dashboard/ProjectsTableRow.components.js","components/dashboard/ProjectsTable.components.js","components/dashboard/TeamTable.components.js","components/DashboardPrivate.components.js","components/ProfilePrivate.components.js","components/AddUserSearchBar.components.js","components/AddNewProject.components.js","components/projectDView/ProjectDViewHeaderText.components.js","components/projectDView/ProjectDViewContext.js","components/projectDView/ProjectDViewAddFeatureForm.components.js","components/projectDView/ProjectDViewAddTaskForm.components.js","components/projectDView/ProjectDViewHeaderButtons.components.js","components/projectDView/ProjectDViewHeader.components.js","components/projectDView/ProjectDViewGantt.components.js","components/projectDView/ProjectDViewProjectDashboard.components.js","services/dateServices.js","components/projectDView/ProjectDView.components.js","components/EditProject.components.js","components/PrivateRoute.components.js","App.js","serviceWorker.js","index.js","assets/img/header.jpg"],"names":["module","exports","AuthContext","createContext","useAuthContext","useContext","authReducer","state","action","type","localStorage","setItem","isAuthenticated","clear","authInitialState","getItem","checkAuth","auth","a","axios","get","process","withCredentials","res","data","error","Error","console","log","handleLogout","fetchUserProfile","NavbarProfile","navbarContext","useNavbarContext","React","useState","dropDownState","setDropDownState","fireRedirectProfile","setFireRedirectProfile","fireRedirectHome","setFireRedirectHome","onSubmitLogout","e","post","to","NavLink","Dropdown","hidden","isOpen","toggle","DropdownToggle","outline","className","caret","userState","username","DropdownMenu","DropdownItem","onClick","NavbarContext","IndexNavbar","navbarColor","setNavbarColor","collapseOpen","setCollapseOpen","setUserState","useEffect","user","updateNavbarColor","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","Provider","value","id","classList","Navbar","expand","color","Container","NavbarBrand","href","aria-expanded","Collapse","navbar","Nav","NavItem","TransparentFooter","Date","getFullYear","target","HomePublic","pageHeader","createRef","add","remove","innerWidth","updateScroll","windowScrollTop","pageYOffset","current","style","transform","filter-color","backgroundImage","require","ref","Col","md","Card","Form","method","CardFooter","Button","block","size","emailRegex","RegExp","passwordRegex","LoginPage","emailState","setEmailState","passwordState","setPasswordState","showPassword","setShowPassword","showPasswordButton","setShowPasswordButton","emailFocus","setEmailFocus","passwordFocus","setPasswordFocus","emailIsValid","setEmailIsValid","emailHasInput","setEmailHasInput","passwordIsValid","setPasswordIsValid","passwordHasInput","setPasswordHasInput","showEmailPopover","setShowEmailPopover","emailPopoverMsg","setEmailPopoverMsg","showPasswordPopover","setShowPasswordPopover","passwordPopoverMsg","setPasswordPopoverMsg","fireRedirectRegister","setFireRedirectRegister","onSubmitLogin","handleLogin","response","description","scrollTo","CardBody","FormGroup","Input","autoComplete","valid","invalid","placeholder","onChange","onChangeEmail","preventDefault","length","test","checkEmailIfValid","onFocus","onBlur","FormFeedback","UncontrolledPopover","trigger","placement","PopoverBody","InputGroupAddon","addonType","onChangePassword","checkPasswordIfValid","RegisterPublic","usernameState","setUsernameState","firstNameState","setFirstNameState","lastNameState","setLastNameState","fireRedirect","setFireRedirect","usernameRegex","firstNameRegex","lastNameRegex","usernameHasInput","setUsernameHasInput","usernameIsValid","setUsernameIsValid","firstNameHasInput","setFirstNameHasInput","firstNameIsValid","setFirstNameIsValid","lastNameHasInput","setLastNameHasInput","lastNameIsValid","setLastNameIsValid","usernamePopoverMsg","setUsernamePopoverMsg","showUsernamePopoverMsg","setShowUsernamePopoverMsg","firstNamePopoverMsg","setFirstNamePopoverMsg","showFirstNamePopoverMsg","setShowFirstNamePopoverMsg","lastNamePopoverMsg","setLastNamePopoverMsg","showLastNamePopoverMsg","setShowLastNamePopoverMsg","showEmailPopoverMsg","setShowEmailPopoverMsg","showPasswordPopoverMsg","setShowPasswordPopoverMsg","submitForm","param","msg","usernameFocus","setUsernameFocus","firstNameFocus","setFirstNameFocus","lastNameFocus","setLastNameFocus","onSubmit","checkUsernameIsValid","checkFirstNameIsValid","checkLastNameIsValid","checkEmailIsValid","checkPasswordIsValid","About","HomePrivate","ProjectSpinner","Spinner","WelcomeText","dbContext","useDashboardContext","firstname","lastname","ProjectsTableHeader","ProjectsTableButton","fireRedirectAddProject","setFireRedirectAddProject","ProjectsTableRow","props","deleteModalState","setDeleteModalState","onChangeDeleteButton","onFireReload","location","reload","projectDViewUri","project","onDeleteProject","paddingTop","Modal","ModalHeader","ModalBody","ModalFooter","ProjectsTable","renderedProjects","projects","map","key","TeamTable","DashboardContext","DashboardPrivate","position","ProfilePrivate","editProfileState","setEditProfileState","saveUserProfile","updateUser","InputGroup","AddUserSearchBar","renderedMembers","setRenderedMembers","usernameInput","setUsernameInput","searchBarFocus","setSearchBarFocus","showUsernameInputPopover","setShowUsernameInputPopover","usernameInputPopoverMsg","setUsernameInputPopoverMsg","addUserToRenderedMembers","includes","usernames","pushElement","newRenderedMembers","push","clearUsernameInput","onChangeParentCompUsersState","Row","searchBarId","xs","el","filter","member","popElement","AddNewProject","projectNameState","setProjectNameState","projectDescriptionState","setProjectDescriptionState","membersState","setMembersState","adminsState","setAdminsState","projectNameFocus","setProjectNameFocus","projectDescriptionFocus","setProjectDescriptionFocus","fireRedirectDashboard","setFireRedirectDashboard","onCreateProject","Label","newMembersState","newAdminsState","ProjectDViewHeaderText","pdvContext","projectData","name","ProjectDViewContext","ProjectDViewProvider","useProjectDViewContext","Consumer","ProjectDViewAddFeatureForm","featureNameState","setFeatureNameState","featureDescriptionState","setFeatureDescriptionState","featureMembersState","setFeatureMembersState","featureCreatorState","setFeatureCreatorState","featureNameFocus","setFeatureNameFocus","featureDescriptionFocus","setFeatureDescriptionFocus","onCreateFeature","userData","onFireCreateFeature","options","membersSelected","i","selected","multiple","for","ProjectDViewAddTaskForm","taskNameState","setTaskNameState","taskDescriptionState","setTaskDescriptionState","taskMembersState","setTaskMembersState","taskCreatorState","setTaskCreatorState","taskFeatureState","setTaskFeatureState","taskStartDateState","setTaskStartDateState","taskEndDateState","setTaskEndDateState","taskNameFocus","setTaskNameFocus","taskDescriptionFocus","setTaskDescriptionFocus","visibleCreateTaskAlert","setVisibleCreateTaskAlert","onCreateTask","renderedFeatures","features","feature","onFireCreateTask","UncontrolledAlert","ProjectDViewHeaderButtons","showAddFeatureModal","setShowAddFeatureModal","showAddTaskModal","setShowAddTaskModal","setOnFireCreateFeature","setOnFireCreateTask","toggleAddFeatureModal","toggleAddTaskModal","right","ProjectDViewHeader","GanttChart","updateGraph","bind","tasks","taskTypes","showSpinner","showInitialMsg","this","setState","setTimeout","margin","height","width","taskColours","0","1","2","3","4","selector","node","timeDomainStart","d3","offset","timeDomainEnd","x","domain","range","clamp","y","rangeRound","padding","xAxis","tickFormat","tickSize","tickPadding","ticks","every","yAxis","chart","append","attr","axes","selectAll","d","startDate","endDate","enter","featureIndex","Math","max","transition","call","legend","index","text","Component","ProjectDViewProjectDashboard","dateStrToJSDate","input","moment","utc","toDate","ProjectDView","setProjectData","setUserData","task","source","CancelToken","match","params","projectName","cancelToken","token","isCancel","marginBottom","EditProject","editProjectState","setEditProjectState","onChangeProjectNameState","onChangeProjectDescriptionState","members","admins","admin","PrivateRoute","component","rest","render","App","useReducer","dispatch","path","exact","Register","LoginPublic","TeamsPrivate","ProjectsPrivate","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f4acf3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.b2101951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/register.f807b37b.jpg\";","import {createContext, useContext} from 'react';\r\nimport axios from 'axios'\r\n\r\n// Creates AuthContext object that has 2 components - Provider and Consumer\r\n// Use for parent class App.js\r\nexport const AuthContext = createContext();\r\n\r\n// Allows component to use AuthContext object\r\n// Returns props passed down from parent component\r\nexport function useAuthContext() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\n// Test reducer\r\nexport const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'login':\r\n        localStorage.setItem(\"authState\", true)\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true\r\n        };\r\n      case 'logout':\r\n        localStorage.clear()\r\n        return {\r\n          ...state,\r\n          isAuthenticated: false\r\n        };\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\nexport const authInitialState = {\r\n  /**\r\n   * Defines initial state for isAuthenticated context that will be used for all child components of \r\n   * App.js\r\n   */\r\n  isAuthenticated: localStorage.getItem(\"authState\") ? (true) : (false)\r\n}\r\n\r\n// Define function to check if current user is authenticated\r\nexport const checkAuth = async (auth) => {\r\n  /**\r\n   * Takes in a context object created from using useAuthContext hook in function\r\n   * Sends a GET request to server with cookie and verifies that token is correct\r\n   * Sets localStorage authState to false if user does not possess token or if any error is thrown\r\n   * during request \r\n   */\r\n  try {\r\n    const res = await axios.get(`${process.env.REACT_APP_BASE_SERVER_URL}/users/checkauth`, {\r\n      withCredentials:true\r\n    });\r\n\r\n    if (res.data.error) {\r\n      throw new Error(res.data.error)\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n    auth.handleLogout()\r\n  }\r\n}\r\n\r\nexport const fetchUserProfile = async (auth) => {\r\n  try {\r\n    const res = await axios.get(`${process.env.REACT_APP_BASE_SERVER_URL}/users/profile`, \r\n    {\r\n      withCredentials: true\r\n    })\r\n    \r\n    if (!res.data.error) {\r\n      return res.data\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n    auth.handleLogout()   \r\n  }\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport axios from \"axios\";\r\n\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, NavLink } from 'reactstrap';\r\n\r\n// Import authContext to check for authentication state; navbarContext to fetch username to render\r\nimport { useAuthContext } from '../../services/AuthReducer'\r\nimport { useNavbarContext } from \"../Navbar.components\"\r\n\r\nconst NavbarProfile = () => {\r\n    const auth = useAuthContext();\r\n    const navbarContext = useNavbarContext();\r\n\r\n    // FUNCTIONAL HOOKS\r\n    const [dropDownState, setDropDownState] = React.useState(false)\r\n    const onFireDropDown = () => {setDropDownState(!dropDownState)}\r\n\r\n    // REDIRECT HOOKS\r\n    const [fireRedirectProfile, setFireRedirectProfile] = React.useState(false)\r\n    const onFireRedirectProfile = () => setFireRedirectProfile(true)\r\n    const [fireRedirectHome, setFireRedirectHome] = React.useState(false)\r\n    const onFireRedirectHome = () => {setFireRedirectHome(true)}\r\n\r\n    // Define logout function\r\n    const onSubmitLogout = async (e) => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/users/logout`, {}, {withCredentials: true});\r\n            if (!res.data.error) {\r\n                auth.handleLogout();\r\n                onFireRedirectHome(e)\r\n            }\r\n        } catch (err) {\r\n            throw new Error(err)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {fireRedirectProfile && <Redirect to=\"/profile\"> push={true} </Redirect>}\r\n        {fireRedirectHome && <Redirect to=\"/\"> push={true} </Redirect>}\r\n        <NavLink>\r\n            <Dropdown hidden={!auth.state.isAuthenticated} isOpen={dropDownState} toggle={onFireDropDown}>\r\n                <DropdownToggle outline className=\"btn-dropdown btn-round\" caret>\r\n                    <p>{navbarContext.userState.username}</p>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem><div onClick = {() => {onFireRedirectProfile()}}>View Profile</div></DropdownItem>\r\n                        <DropdownItem><div onClick = {() => {onSubmitLogout()}}>Logout</div></DropdownItem>\r\n                    </DropdownMenu>\r\n            </Dropdown>\r\n        </NavLink>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NavbarProfile;","import React from \"react\";\nimport {Collapse, NavbarBrand, Navbar, NavItem, NavLink, Nav, Container} from \"reactstrap\";\n\n// Import child components\nimport NavbarProfile from \"./dashboard/Navbar.Profile.components\"\n\n// Import authContext\nimport {useAuthContext, fetchUserProfile} from \"../services/AuthReducer\"\n\n// Create Navbar context for child components\nexport const NavbarContext = React.createContext();\nexport const useNavbarContext = () => {return React.useContext(NavbarContext)}\n\nfunction IndexNavbar () {\n  const auth = useAuthContext(); \n  const [navbarColor, setNavbarColor] = React.useState(\"navbar-transparent\");\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n\n  // Set user state for Navbar\n  const [userState, setUserState] = React.useState({\n    'username':\"\",\n  })\n\n  React.useEffect(() => {\n    // Fetch username of currently logged in user\n    (async () => {\n      if (auth.state.isAuthenticated) {\n        const user = await fetchUserProfile(auth);\n        setUserState({'username':user.username})\n      }\n    })();\n\n    const updateNavbarColor = () => {\n      if (document.documentElement.scrollTop > 399 || document.body.scrollTop > 399) {\n        setNavbarColor(\"\");\n      } else if (document.documentElement.scrollTop < 400 || document.body.scrollTop < 400) {\n        setNavbarColor(\"navbar-transparent\");\n      }};\n      \n      window.addEventListener(\"scroll\", updateNavbarColor);\n      return function cleanup() {\n        window.removeEventListener(\"scroll\", updateNavbarColor);\n    };\n\n  }, [auth]);\n\n  return (\n    <>\n    <NavbarContext.Provider value ={{userState}}>\n      {collapseOpen ? (<div id=\"bodyClick\" onClick={() => {\n        document.documentElement.classList.toggle(\"nav-open\");\n        setCollapseOpen(false);\n      }}/>) : null}\n        <Navbar className={\"navbar-dark fixed-top \" + navbarColor} expand=\"lg\" color=\"info\">\n        <Container>\n          <div className=\"navbar-translate\">\n            <NavbarBrand href={auth.state.isAuthenticated ? (\"/dashboard\") : (\"/\")} id=\"navbar-brand\">Stream</NavbarBrand>\n            <button className=\"navbar-toggler navbar-toggler-icon\" onClick={() => {\n              document.documentElement.classList.toggle(\"nav-open\"); \n              setCollapseOpen(!collapseOpen);\n            }} aria-expanded={collapseOpen} type=\"button\"></button>\n          </div>\n          <Collapse className=\"justify-content-end\" isOpen={collapseOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/about\" hidden={auth.state.isAuthenticated}><p>About</p></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/\" hidden={!auth.state.isAuthenticated}><p>Dashboard</p></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/register\" hidden={auth.state.isAuthenticated}><p>Register</p></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/login\" hidden={auth.state.isAuthenticated}><p>Login</p></NavLink>\n              </NavItem>\n              {/* <NavItem>\n                <NavLink href=\"/projects\" hidden={!auth.state.isAuthenticated}><p>Projects</p></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/teams\" hidden={!auth.state.isAuthenticated}><p>Teams</p></NavLink>\n              </NavItem> */}\n              <NavItem>\n                <NavbarProfile></NavbarProfile>\n              </NavItem>\n              </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      </NavbarContext.Provider>\n    </>\n  );\n}\n\nexport default IndexNavbar;\n","/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\nfunction TransparentFooter() {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <div className=\"copyright\" id=\"copyright\">\n          © {new Date().getFullYear()}.\n          Built by Jonathan Quah / {\" \"}\n          <a\n            href=\"https://quattad.github.io/\"\n            target=\"_blank\"\n          >\n            Quattad\n          </a>\n          .\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default TransparentFooter;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Button, Container, Card, CardFooter, Form, Col } from 'reactstrap';\r\n\r\n// Import child components\r\nimport TransparentFooter from './TransparentFooter'\r\n\r\n// Import services\r\nimport { useAuthContext } from \"../services/AuthReducer\"\r\n\r\nconst HomePublic = () => {\r\n  const auth = useAuthContext();\r\n  let pageHeader = React.createRef();\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.body.classList.add(\"login-page\");\r\n    document.documentElement.classList.remove(\"nav-open\")\r\n\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform =\r\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n      };\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n    {auth.state.isAuthenticated && <Redirect to='/dashboard'> push={true} </Redirect>}\r\n      <div \r\n      className=\"page-header clear-filter\" \r\n      filter-color=\"blue\">\r\n        <div \r\n        className=\"page-header-image\" \r\n        style={{backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"}} \r\n        ref={pageHeader}></div>\r\n          <div \r\n          className=\"content-center brand\">\r\n            <Container>\r\n              <h1 \r\n              className=\"h1-seo\">Execute your projects better.</h1>\r\n            <h3>Stream allows your team to better organize your people for optimum resource allocation.</h3>\r\n            </Container>\r\n            <br />\r\n            <Container>\r\n            <Col \r\n            className=\"ml-auto mr-auto\" \r\n            md=\"4\">\r\n              <Card \r\n              className=\"card-login card-plain\">\r\n                <Form \r\n                action=\"\" \r\n                className=\"form\" \r\n                method=\"\">\r\n                  <CardFooter \r\n                  className=\"text-center\">\r\n                    <Button\r\n                    href=\"/register\"\r\n                    block\r\n                    className=\"btn-neutral btn-round\"\r\n                    color=\"info\"\r\n                    onClick={()=> \"window.location='./register'\"}\r\n                    size=\"lg\"\r\n                    >Get Started</Button>\r\n                  </CardFooter>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Container>\r\n          </div>\r\n          <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePublic;","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nimport { UncontrolledPopover, PopoverBody, FormFeedback, FormGroup, Button, Card, CardBody, CardFooter, Form, Input, InputGroupAddon, Container, Col } from \"reactstrap\";\r\n\r\n// Import child components\r\nimport Navbar from \"./Navbar.components\";\r\nimport TransparentFooter from \"./TransparentFooter\";\r\n\r\n// import useAuth functions to set authState\r\nimport {useAuthContext} from '../services/AuthReducer'\r\n\r\n// define email and password regexes\r\nconst emailRegex = RegExp(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)\r\nconst passwordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$/)\r\n\r\nfunction LoginPage () {\r\n  const auth = useAuthContext()\r\n\r\n  // FORM STATE HOOKS\r\n  const [emailState, setEmailState] = React.useState(\"\");\r\n  const onChangeEmail = (e) => {setEmailState(e.target.value)};\r\n\r\n  const [passwordState, setPasswordState] = React.useState(\"\");\r\n  const onChangePassword = (e) => {setPasswordState(e.target.value)};\r\n\r\n  // FORM FUNCTIONALITY HOOKS\r\n  const[showPassword, setShowPassword] = React.useState(\"password\");\r\n  const onShowPassword = () => {setShowPassword(!showPassword)};\r\n\r\n  const[showPasswordButton, setShowPasswordButton] = React.useState(\"Show\");\r\n  const onShowPasswordButton = () => {setShowPasswordButton(!showPasswordButton)};\r\n\r\n  // FORM FUNCTIONALITY HOOKS\r\n  const [emailFocus, setEmailFocus] = React.useState(false);\r\n  const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n  const [emailIsValid, setEmailIsValid] = React.useState(false);\r\n  const [emailHasInput, setEmailHasInput] = React.useState(false)\r\n  const checkEmailIfValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setEmailHasInput(true);\r\n      \r\n      if (emailRegex.test(e.target.value)) {\r\n        setEmailIsValid(true);\r\n        setEmailHasInput(false); // To prevent override of valid field\r\n      } else {\r\n        setEmailIsValid(false);\r\n      }\r\n\r\n    } else {\r\n      setEmailHasInput(false);\r\n      setEmailIsValid(false);\r\n    }\r\n  };\r\n\r\n  const [passwordIsValid, setPasswordIsValid] = React.useState(false);\r\n  const [passwordHasInput, setPasswordHasInput] = React.useState(false)\r\n  const checkPasswordIfValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setPasswordHasInput(true);\r\n      \r\n      if (passwordRegex.test(e.target.value)) {\r\n        setPasswordIsValid(true);\r\n        setPasswordHasInput(false); // To prevent override of valid field\r\n      } else {\r\n        setPasswordIsValid(false);\r\n      }\r\n\r\n    } else {\r\n      setPasswordHasInput(false);\r\n      setPasswordIsValid(false);\r\n    }\r\n  };\r\n\r\n  const [showEmailPopover, setShowEmailPopover] = React.useState(false)\r\n  const [emailPopoverMsg, setEmailPopoverMsg] = React.useState(\"\")\r\n\r\n  const [showPasswordPopover, setShowPasswordPopover] = React.useState(false)\r\n  const [passwordPopoverMsg, setPasswordPopoverMsg] = React.useState(\"\")\r\n\r\n  // REDIRECT HOOKS\r\n  const[fireRedirectHome, setFireRedirectHome] = React.useState(false)\r\n  const onFireRedirectHome = () => {setFireRedirectHome(true)}\r\n\r\n  const[fireRedirectRegister, setFireRedirectRegister] = React.useState(false)\r\n  const onFireRedirectRegister = () => {setFireRedirectRegister(true)}\r\n\r\n  // Define login function\r\n  const onSubmitLogin = async (e) => {\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/users/login`, {\r\n        \"email\": emailState,\r\n        \"password\": passwordState\r\n      },\r\n      {\r\n        withCredentials: true\r\n      });\r\n\r\n      if (!res.data.error) {\r\n        await auth.handleLogin();\r\n        onFireRedirectHome(e);\r\n\r\n    }} catch (err) {\r\n    /** Error handling for login issues */\r\n    if (err.response.data.description === \"EMAIL_FIELD_EMPTY\") {\r\n      setShowEmailPopover(true)\r\n      setShowPasswordPopover(false)\r\n      setEmailPopoverMsg(\"Email field is empty.\")\r\n    }\r\n    else if (err.response.data.description === \"PASSWORD_FIELD_EMPTY\") {\r\n      setShowPasswordPopover(true)\r\n      setShowEmailPopover(false)\r\n      setPasswordPopoverMsg(\"Password field is empty.\")\r\n    }\r\n    else if (err.response.data.description === \"USER_NOT_FOUND\") {\r\n      setShowEmailPopover(true)\r\n      setShowPasswordPopover(false)\r\n      setEmailPopoverMsg(\"User was not found.\")\r\n    }\r\n    else if (err.response.data.description === \"PASSWORD_DOES_NOT_MATCH\") {\r\n      setShowPasswordPopover(true)\r\n      setShowEmailPopover(false)\r\n      setPasswordPopoverMsg(\"Incorrect password.\")\r\n    }\r\n    else {\r\n      throw new Error(\"Uncaught error: \" + err)\r\n    }\r\n  }\r\n};\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"login-page\");\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n    window.scrollTo(0, 0);\r\n    document.body.scrollTop = 0;\r\n\r\n    return function cleanup() {\r\n      document.body.classList.remove(\"login-page\");\r\n      document.body.classList.remove(\"sidebar-collapse\");\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {fireRedirectHome && <Redirect to='/dashboard'> push={true} </Redirect>}\r\n      {fireRedirectRegister && <Redirect to='/register'> push={true}</Redirect>}\r\n      <div className=\"page-header clear-filter\" filter-color=\"blue\">\r\n        <div className=\"page-header-image\" style={{backgroundImage: \"url(\" + require(\"../assets/img/login.jpg\") + \")\"}}></div>\r\n        <div className=\"content\">\r\n          <Container>\r\n            <Col className=\"ml-auto mr-auto\" md=\"4\">\r\n              <Card className=\"card-login card-plain\">\r\n                <Form action=\"\" className=\"form\" method=\"\">\r\n                  <Container>\r\n                    <h3 className=\"h3 seo\">Welcome back to Stream.</h3>\r\n                  </Container>\r\n                  <CardBody>\r\n                    <FormGroup className={\"no-border input-lg\" + (emailFocus ? \" input-group-focus\" : \"\")}>\r\n                      <Input \r\n                      id=\"emailField\"\r\n                      autoComplete=\"username\" \r\n                      valid={emailIsValid} invalid={emailHasInput}\r\n                      placeholder=\"Email\"\r\n                      onChange={(e)=>{onChangeEmail(e); checkEmailIfValid(e)}} \r\n                      onFocus={() => setEmailFocus(true)} \r\n                      onBlur={() => setEmailFocus(false)}>\r\n                      </Input><FormFeedback>Invalid email.</FormFeedback>\r\n                      <UncontrolledPopover trigger=\"focus\" toggle={()=>{setShowEmailPopover(false)}} placement=\"right\" isOpen={showEmailPopover} target=\"emailField\">\r\n                        <PopoverBody>{emailPopoverMsg}</PopoverBody>\r\n                      </UncontrolledPopover>\r\n                    </FormGroup>\r\n                    <FormGroup className={\"no-border input-lg\" + (passwordFocus ? \" input-group-focus\" : \"\")}>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                      autoComplete=\"current-password\" \r\n                      id=\"passwordField\" \r\n                      valid={passwordIsValid} invalid={passwordHasInput} \r\n                      placeholder=\"Password\"\r\n                      type={(showPassword ? \"password\": \"text\")}\r\n                      onChange={(e)=>{onChangePassword(e); checkPasswordIfValid(e);}}\r\n                      onFocus={() => setPasswordFocus(true)}\r\n                      onBlur={() => setPasswordFocus(false)}\r\n                      ></Input><FormFeedback>Password must be between 8 to 20 characters, 1 uppercase and 1 lowercase letter.</FormFeedback>\r\n                      <UncontrolledPopover trigger=\"click\" toggle={()=>{setShowPasswordPopover(false)}}placement=\"right\" isOpen={showPasswordPopover} target=\"passwordField\">\r\n                        <PopoverBody>{passwordPopoverMsg}</PopoverBody>\r\n                      </UncontrolledPopover>\r\n                    </FormGroup>\r\n                    <div className=\"col-md-auto\">\r\n                      <Button outline className=\"btn-round\" size=\"md\" onClick={(e) => {\r\n                          onShowPassword(e)\r\n                          onShowPasswordButton(e)\r\n                        }}>{(showPasswordButton) ? \"Show Password\":\"Hide Password\"}</Button>\r\n                    </div>\r\n                  </CardBody>\r\n                  <CardFooter className=\"text-center\">\r\n                    <Button outline block className=\"btn-round\" size=\"lg\" onClick={(e) => {\r\n                      onSubmitLogin(e)\r\n                    }}>Login</Button>\r\n                    <div className=\"pull-left\"><h6><a className=\"link\" href=\"/register\" onClick={\r\n                      () => onFireRedirectRegister()\r\n                    }>Register</a></h6>\r\n                    </div>\r\n                  </CardFooter>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Container>\r\n        </div>\r\n        <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router'\r\n\r\n// reactstrap components\r\nimport { Button, Card, CardBody, CardFooter, Form, FormGroup, Input, Container, Col, FormFeedback, UncontrolledPopover, PopoverBody } from \"reactstrap\";\r\n\r\n// core components\r\nimport Navbar from \"./Navbar.components\";\r\nimport TransparentFooter from \"./TransparentFooter\";\r\n\r\nconst RegisterPublic = () => {\r\n\r\n  // Define state variables for register form\r\n  const [usernameState, setUsernameState] = React.useState(\"\")\r\n  const [firstNameState, setFirstNameState] = React.useState(\"\")\r\n  const [lastNameState, setLastNameState] = React.useState(\"\")\r\n  const [emailState, setEmailState] = React.useState(\"\")\r\n  const [passwordState, setPasswordState] = React.useState(\"\")\r\n\r\n  // Additional form features\r\n  const [fireRedirect, setFireRedirect] = React.useState(false);\r\n  const [showPassword, setShowPassword] = React.useState(\"password\");\r\n  const [showPasswordButton, setShowPasswordButton] = React.useState(\"Show\");\r\n\r\n  // Form validity regex\r\n  const usernameRegex = RegExp(/^[A-Za-z\\d@$!]{5,10}$/);  // can contain A-Z, a-z, special chars @$!, between 5 to 10\r\n  const firstNameRegex = RegExp(/^[A-Za-z]{1,10}$/); // can contain A-z, a-z, char length between 1 to 10\r\n  const lastNameRegex = RegExp(/^[A-Za-z]{1,10}$/); // can contain A-z, a-z, char length between 1 to 10\r\n  const emailRegex = RegExp(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)\r\n  const passwordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$/);\r\n\r\n  // Form validity hooks\r\n  const [usernameHasInput, setUsernameHasInput] = React.useState(false);\r\n  const [usernameIsValid, setUsernameIsValid] = React.useState(false);\r\n  const [firstNameHasInput, setFirstNameHasInput] = React.useState(false);\r\n  const [firstNameIsValid, setFirstNameIsValid] = React.useState(false);\r\n  const [lastNameHasInput, setLastNameHasInput] = React.useState(false);\r\n  const [lastNameIsValid, setLastNameIsValid] = React.useState(false);\r\n  const [emailHasInput, setEmailHasInput] = React.useState(false);\r\n  const [emailIsValid, setEmailIsValid] = React.useState(false);\r\n  const [passwordHasInput, setPasswordHasInput] = React.useState(false);\r\n  const [passwordIsValid, setPasswordIsValid] = React.useState(false);\r\n\r\n  // Form validity functions\r\n  const checkUsernameIsValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setUsernameHasInput(true);\r\n\r\n      if (usernameRegex.test(e.target.value)) {\r\n        setUsernameIsValid(true);\r\n        setUsernameHasInput(false);  // prevent override of valid field\r\n      } else {\r\n        setUsernameIsValid(false);\r\n      };\r\n    } else {\r\n      setUsernameHasInput(false);\r\n      setUsernameIsValid(false);\r\n    };\r\n  };\r\n\r\n  const checkFirstNameIsValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setFirstNameHasInput(true);\r\n\r\n      if (firstNameRegex.test(e.target.value)) {\r\n        setFirstNameIsValid(true);\r\n        setFirstNameHasInput(false);  // prevent override of valid field\r\n      } else {\r\n        setFirstNameIsValid(false);\r\n      };\r\n    } else {\r\n      setFirstNameHasInput(false);\r\n      setFirstNameIsValid(false);\r\n    };\r\n  };\r\n\r\n  const checkLastNameIsValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setLastNameHasInput(true);\r\n\r\n      if (lastNameRegex.test(e.target.value)) {\r\n        setLastNameIsValid(true);\r\n        setLastNameHasInput(false);  // prevent override of valid field\r\n      } else {\r\n        setLastNameIsValid(false);\r\n      };\r\n    } else {\r\n      setLastNameHasInput(false);\r\n      setLastNameIsValid(false);\r\n    };\r\n  };\r\n\r\n  const checkEmailIsValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setEmailHasInput(true);\r\n\r\n      if (emailRegex.test(e.target.value)) {\r\n        setEmailIsValid(true);\r\n        setEmailHasInput(false);  // prevent override of valid field\r\n      } else {\r\n        setEmailIsValid(false);\r\n      };\r\n    } else {\r\n      setEmailHasInput(false);\r\n      setEmailIsValid(false);\r\n    };\r\n  };\r\n\r\n  const checkPasswordIsValid = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value.length > 0) {\r\n      setPasswordHasInput(true);\r\n\r\n      if (passwordRegex.test(e.target.value)) {\r\n        setPasswordIsValid(true);\r\n        setPasswordHasInput(false);  // prevent override of valid field\r\n      } else {\r\n        setPasswordIsValid(false);\r\n      };\r\n    } else {\r\n      setPasswordHasInput(false);\r\n      setPasswordIsValid(false);\r\n    };\r\n  };\r\n\r\n  // Field popup and truthy states\r\n  const [ usernamePopoverMsg, setUsernamePopoverMsg ] = React.useState(\"\");\r\n  const [ showUsernamePopoverMsg, setShowUsernamePopoverMsg ] = React.useState(false); \r\n  const [ firstNamePopoverMsg, setFirstNamePopoverMsg ] = React.useState(\"\");\r\n  const [ showFirstNamePopoverMsg, setShowFirstNamePopoverMsg ] = React.useState(false); \r\n  const [ lastNamePopoverMsg, setLastNamePopoverMsg ] = React.useState(\"\");\r\n  const [ showLastNamePopoverMsg, setShowLastNamePopoverMsg ] = React.useState(false); \r\n  const [ emailPopoverMsg, setEmailPopoverMsg ] = React.useState(\"\");\r\n  const [ showEmailPopoverMsg, setShowEmailPopoverMsg ] = React.useState(false); \r\n  const [ passwordPopoverMsg, setPasswordPopoverMsg ] = React.useState(\"\");\r\n  const [ showPasswordPopoverMsg, setShowPasswordPopoverMsg ] = React.useState(false); \r\n\r\n  // Define functions to set states of register form variables\r\n  const onChangeUsername = (e) => {\r\n    setUsernameState(e.target.value);\r\n    checkUsernameIsValid(e);\r\n  };\r\n\r\n  const onChangeFirstName = (e) => {\r\n    setFirstNameState(e.target.value);\r\n    checkFirstNameIsValid(e);\r\n  };\r\n\r\n  const onChangeLastName = (e) => {\r\n    setLastNameState(e.target.value);\r\n    checkLastNameIsValid(e);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmailState(e.target.value);\r\n    checkEmailIsValid(e);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPasswordState(e.target.value);\r\n    checkPasswordIsValid(e);\r\n  };\r\n\r\n  const onFireRedirectLogin = () => {\r\n    setFireRedirect(true);\r\n  };\r\n\r\n  const onShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const onShowPasswordButton = () => {\r\n    setShowPasswordButton(!showPasswordButton);\r\n  };\r\n\r\n  const onFireShowPassword = (e) => {\r\n      onShowPassword(e);\r\n      onShowPasswordButton(e);\r\n  };\r\n\r\n  // Define function for form submission\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      \"username\": usernameState,\r\n      \"firstname\": firstNameState,\r\n      \"lastname\": lastNameState,\r\n      \"email\": emailState,\r\n      \"password\": passwordState\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/users/add`, user);\r\n\r\n      if (!res.data.error) {\r\n        onFireRedirectLogin(e);\r\n      };\r\n      \r\n    } catch (err) {\r\n      // Extract first error from validationError\r\n      const error = err.response.data.description[\"errors\"][0];\r\n\r\n      /** Error handling for registration */\r\n      if (error.param === \"username\") {\r\n\r\n        setShowUsernamePopoverMsg(true);\r\n        setShowFirstNamePopoverMsg(false);\r\n        setShowLastNamePopoverMsg(false);\r\n        setShowEmailPopoverMsg(false);\r\n        setShowPasswordPopoverMsg(false);\r\n        setUsernamePopoverMsg(error.msg);\r\n\r\n      } else if (error.param === \"firstname\") {\r\n\r\n        setShowUsernamePopoverMsg(false);\r\n        setShowFirstNamePopoverMsg(true);\r\n        setShowLastNamePopoverMsg(false);\r\n        setShowEmailPopoverMsg(false);\r\n        setShowPasswordPopoverMsg(false);\r\n        setFirstNamePopoverMsg(error.msg);\r\n\r\n      } else if (error.param === \"lastname\") {\r\n\r\n        setShowUsernamePopoverMsg(false);\r\n        setShowFirstNamePopoverMsg(false);\r\n        setShowLastNamePopoverMsg(true);\r\n        setShowEmailPopoverMsg(false);\r\n        setShowPasswordPopoverMsg(false);\r\n        setLastNamePopoverMsg(error.msg);\r\n\r\n      } else if (error.param === \"email\") {\r\n\r\n        setShowUsernamePopoverMsg(false);\r\n        setShowFirstNamePopoverMsg(false);\r\n        setShowLastNamePopoverMsg(false);\r\n        setShowEmailPopoverMsg(true);\r\n        setShowPasswordPopoverMsg(false);\r\n        setEmailPopoverMsg(error.msg);\r\n\r\n      } else if (error.param === \"password\") {\r\n\r\n        setShowUsernamePopoverMsg(false);\r\n        setShowFirstNamePopoverMsg(false);\r\n        setShowLastNamePopoverMsg(false);\r\n        setShowEmailPopoverMsg(false);\r\n        setShowPasswordPopoverMsg(true);\r\n        setPasswordPopoverMsg(error.msg);\r\n\r\n      };\r\n    };\r\n  };\r\n\r\n  // Define state variables for focus feature\r\n  const [usernameFocus, setUsernameFocus] = React.useState(false);\r\n  const [firstNameFocus, setFirstNameFocus] = React.useState(false);\r\n  const [lastNameFocus, setLastNameFocus] = React.useState(false);\r\n  const [emailFocus, setEmailFocus] = React.useState(false);\r\n  const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n  // Set initial conditions for page\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"login-page\");\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n    window.scrollTo(0, 0);\r\n    document.body.scrollTop = 0;\r\n    return function cleanup() {\r\n      document.body.classList.remove(\"login-page\");\r\n      document.body.classList.remove(\"sidebar-collapse\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {fireRedirect && <Redirect to='/'> push={true} </Redirect>}\r\n      <div \r\n      className=\"page-header clear-filter\" \r\n      filter-color=\"blue\">\r\n        <div \r\n        className=\"page-header-image\" \r\n        style={{backgroundImage: \"url(\" + require(\"../assets/img/register.jpg\") + \")\"}}\r\n          ></div>\r\n        <div \r\n        className=\"content\">\r\n          <Container>\r\n            <Col \r\n            className=\"ml-auto mr-auto\" \r\n            md=\"4\">\r\n              <Card \r\n              className=\"card-login card-plain\">\r\n                <Form \r\n                onSubmit={submitForm} \r\n                className=\"form\" \r\n                method=\"POST\">\r\n                  <Container>\r\n                    <h3 \r\n                    className=\"h3 seo\">\r\n                      Start your journey with Stream.\r\n                    </h3>\r\n                  </Container>\r\n                <CardBody>\r\n                  <FormGroup \r\n                  className={\"no-border input-lg\" + (usernameFocus ? \" input-group-focus\" : \"\")}>\r\n                      <Input\r\n                      id=\"usernameField\"\r\n                      valid={usernameIsValid}\r\n                      invalid={usernameHasInput} \r\n                      placeholder=\"Username\" \r\n                      type=\"text\"\r\n                      onChange = {onChangeUsername}\r\n                      onFocus={() => setUsernameFocus(true)} \r\n                      onBlur={() => setUsernameFocus(false)}></Input>\r\n                      <FormFeedback>Username should be between 5 to 10 characters.</FormFeedback>\r\n                      <UncontrolledPopover \r\n                      trigger=\"focus\" \r\n                      toggle={()=>{setShowUsernamePopoverMsg(false)}} \r\n                      placement=\"right\" \r\n                      isOpen={showUsernamePopoverMsg} \r\n                      target=\"usernameField\">\r\n                        <PopoverBody>{usernamePopoverMsg}</PopoverBody>\r\n                      </UncontrolledPopover>\r\n                    </FormGroup>\r\n                    <FormGroup \r\n                      className={ \"no-border input-lg\" + (firstNameFocus ? \" input-group-focus\" : \"\")}>\r\n                      <Input\r\n                      id=\"firstNameField\"\r\n                      valid={firstNameIsValid}\r\n                      invalid={firstNameHasInput} \r\n                      placeholder=\"First name\" \r\n                      type=\"text\" \r\n                      onChange ={onChangeFirstName}\r\n                      onFocus={() => setFirstNameFocus(true)} \r\n                      onBlur={() => setFirstNameFocus(false)} ></Input>\r\n                      <FormFeedback>First name should be between 1 to 10 characters.</FormFeedback>\r\n                      <UncontrolledPopover \r\n                      trigger=\"focus\" \r\n                      toggle={()=>{setShowFirstNamePopoverMsg(false)}} \r\n                      placement=\"right\" \r\n                      isOpen={showFirstNamePopoverMsg} \r\n                      target=\"firstNameField\">\r\n                        <PopoverBody>{firstNamePopoverMsg}</PopoverBody>\r\n                        </UncontrolledPopover>\r\n                    </FormGroup>\r\n                    <FormGroup \r\n                    className={\"no-border input-lg\" + (lastNameFocus ? \" input-group-focus\" : \"\")}>\r\n                      <Input\r\n                      id=\"lastNameField\"\r\n                      valid={lastNameIsValid}\r\n                      invalid={lastNameHasInput}\r\n                      placeholder=\"Last name\"\r\n                      type=\"text\"\r\n                      onChange ={onChangeLastName}\r\n                      onFocus={() => setLastNameFocus(true)}\r\n                      onBlur={() => setLastNameFocus(false)}\r\n                      ></Input><FormFeedback>Last name should be between 1 to 10 characters.</FormFeedback>\r\n                        <UncontrolledPopover \r\n                        trigger=\"focus\" \r\n                        toggle={()=>{setShowLastNamePopoverMsg(false)}} \r\n                        placement=\"right\" \r\n                        isOpen={showLastNamePopoverMsg} \r\n                        target=\"lastNameField\">\r\n                        <PopoverBody>{lastNamePopoverMsg}</PopoverBody>\r\n                        </UncontrolledPopover>\r\n                    </FormGroup>\r\n                    <FormGroup className={\"no-border input-lg\" + (emailFocus? \" input-group-focus\" : \"\")}>\r\n                      <Input\r\n                      id=\"emailField\"\r\n                      valid={emailIsValid}\r\n                      invalid={emailHasInput}\r\n                      placeholder=\"Email\"\r\n                      type=\"text\"\r\n                      onChange = {onChangeEmail}\r\n                      onFocus={() => setEmailFocus(true)}\r\n                      onBlur={() => setEmailFocus(false)}\r\n                      ></Input><FormFeedback>Invalid email.</FormFeedback>\r\n                      <UncontrolledPopover \r\n                      trigger=\"focus\" \r\n                      toggle={()=>{setShowEmailPopoverMsg(false)}} \r\n                      placement=\"right\" \r\n                      isOpen={showEmailPopoverMsg} \r\n                      target=\"emailField\">\r\n                        <PopoverBody>{emailPopoverMsg}</PopoverBody>\r\n                      </UncontrolledPopover>\r\n                    </FormGroup>\r\n                    <div \r\n                    className=\"container\">\r\n                      <div \r\n                      className=\"row\">\r\n                        <div \r\n                        className=\"col-lg\">\r\n                          <FormGroup \r\n                          className={\"no-border input-lg\" + (passwordFocus ? \" input-group-focus\" : \"\")}>\r\n                            <Input\r\n                            id=\"passwordField\"\r\n                            valid={passwordIsValid}\r\n                            invalid={passwordHasInput}\r\n                            placeholder=\"Password\"\r\n                            type={(showPassword ? \"password\": \"text\")}\r\n                            onChange={onChangePassword}\r\n                            onFocus={() => setPasswordFocus(true)}\r\n                            onBlur={() => setPasswordFocus(false)}\r\n                            ></Input><FormFeedback>Password must be between 8 to 20 characters, 1 uppercase and 1 lowercase letter.</FormFeedback>\r\n                          </FormGroup>\r\n                          <UncontrolledPopover \r\n                          trigger=\"focus\" \r\n                          toggle={()=>{setShowPasswordPopoverMsg(false)}} \r\n                          placement=\"right\" \r\n                          isOpen={showPasswordPopoverMsg} \r\n                          target=\"passwordField\">\r\n                        <PopoverBody>{passwordPopoverMsg}</PopoverBody>\r\n                      </UncontrolledPopover>\r\n                          </div>\r\n                          <div className=\"col-md-auto\">\r\n                            <Button \r\n                            outline \r\n                            className=\"btn-round\"\r\n                            size=\"md\"\r\n                            onClick={onFireShowPassword}>{(showPasswordButton) ? \"Show\":\"Hide\"}\r\n                            </Button>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardBody>\r\n                  <CardFooter \r\n                    className=\"text-center\">\r\n                    <Button\r\n                      block\r\n                      outline\r\n                      className=\"btn-round\"\r\n                      type=\"submit\"\r\n                      size=\"lg\"\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                    <div \r\n                      className=\"pull-left\">\r\n                      <h6>\r\n                      <a\r\n                      className=\"link\"\r\n                      href=\"/login\"\r\n                      onClick={() => \"window.location='/login'\"}\r\n                      >\r\n                        Login with Stream Account\r\n                        </a></h6>\r\n                    </div>\r\n                  </CardFooter>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Container>\r\n        </div>\r\n        <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPublic;","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nimport TransparentFooter from './TransparentFooter'\r\n\r\nconst About = () => {\r\n  let pageHeader = React.createRef();\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.body.classList.add(\"login-page\");\r\n    document.documentElement.classList.remove(\"nav-open\")\r\n\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform = \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n        document.body.classList.add(\"sidebar-collapse\");\r\n        document.documentElement.classList.remove(\"nav-open\");\r\n      };\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div \r\n      className=\"page-header clear-filter\" \r\n      filter-color=\"blue\">\r\n        <div \r\n        className=\"page-header-image\" \r\n        style={{backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"}} \r\n        ref={pageHeader}></div>\r\n          <div \r\n          className=\"content-center brand\">\r\n              <Container>\r\n                  <h1>About Page</h1>\r\n              </Container>\r\n          </div>\r\n          <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;","/*eslint-disable*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport TransparentFooter from './TransparentFooter'\r\n\r\nfunction HomePrivate() {\r\n  let pageHeader = React.createRef();\r\n\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.body.classList.add(\"login-page\");\r\n    document.documentElement.classList.remove(\"nav-open\")\r\n\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform =\r\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n      };\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header clear-filter\" filter-color=\"blue\">\r\n        <div className=\"page-header-image\" \r\n        style={{\r\n            backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"\r\n            }} ref={pageHeader}></div>\r\n          <div className=\"content-center brand\">\r\n              <Container>\r\n                  <h1>Teams Page</h1>\r\n              </Container>\r\n          </div>\r\n          <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePrivate;","/*eslint-disable*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport TransparentFooter from './TransparentFooter'\r\n\r\nfunction HomePrivate() {\r\n  let pageHeader = React.createRef();\r\n\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.body.classList.add(\"login-page\");\r\n    document.documentElement.classList.remove(\"nav-open\")\r\n\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform =\r\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n      };\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header clear-filter\" filter-color=\"blue\">\r\n        <div className=\"page-header-image\" \r\n        style={{\r\n            backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"\r\n            }} ref={pageHeader}></div>\r\n          <div className=\"content-center brand\">\r\n              <Container>\r\n                  <h1>Projects Page</h1>\r\n              </Container>\r\n          </div>\r\n          <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePrivate;","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst ProjectSpinner = () => {\r\n    return(\r\n        <>\r\n        <Spinner type=\"grow\" color=\"info\" />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProjectSpinner;","import React from \"react\";\r\nimport ProjectSpinner from \"../ProjectSpinner.components\";\r\nimport { useDashboardContext } from \"../DashboardPrivate.components\";\r\n\r\nfunction WelcomeText () {\r\n    const dbContext = useDashboardContext()\r\n    return (\r\n    <>\r\n    <div className=\"float-left\">\r\n        <h1>Welcome, {dbContext.userState.firstname ? dbContext.userState.firstname : <ProjectSpinner />} {dbContext.userState.lastname ? dbContext.userState.lastname : <ProjectSpinner />}</h1>\r\n    </div> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default WelcomeText;","import React from 'react'\r\n\r\nfunction ProjectsTableHeader () {\r\n    return (\r\n    <>\r\n    <div className=\"float-left\">\r\n        <h2>Your Projects</h2>\r\n    </div> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProjectsTableHeader;","import React from 'react'\r\nimport { Redirect } from 'react-router'\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst ProjectsTableButton = () => {\r\n    const [fireRedirectAddProject, setFireRedirectAddProject] = React.useState(false);\r\n\r\n    const onFireRedirectAddProject = () => {\r\n        setFireRedirectAddProject(!fireRedirectAddProject);\r\n    };\r\n\r\n    return (\r\n    <>\r\n    {fireRedirectAddProject && <Redirect to=\"/addproject\"></Redirect>}\r\n    <div className=\"float-right\">\r\n        <Button \r\n        outline \r\n        className=\"btn-round\" \r\n        size=\"md\" \r\n        onClick={onFireRedirectAddProject}>Add Project</Button>\r\n    </div> \r\n    </>\r\n    )\r\n};\r\n\r\nexport default ProjectsTableButton;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\nconst ProjectsTableRow = (props) => {\r\n    const [deleteModalState, setDeleteModalState] = React.useState(false);\r\n    const onChangeDeleteButton = () => {setDeleteModalState(!deleteModalState)};\r\n\r\n    const onFireReload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    const projectDViewUri = `/projects/${props.project}`;\r\n    const editProjectUri = `/editproject/${props.project}`;\r\n\r\n    const onDeleteProject = async () => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/projects/delete`,\r\n            {\r\n                \"name\": props.project\r\n            },\r\n            {\r\n                withCredentials: true\r\n            });\r\n            \r\n            if (!res.data.error) {\r\n                onChangeDeleteButton();\r\n                onFireReload();\r\n            }\r\n        } catch (err) {\r\n            // Add Alert here\r\n            onFireReload();\r\n        }\r\n    };\r\n    return (\r\n    <>\r\n    <div \r\n    className=\"float-left\">\r\n        <h4>{props.project}</h4>\r\n    </div> \r\n    <div \r\n    className=\"float-right\" \r\n    style={{paddingTop:\"20px\"}}>\r\n        <Link \r\n        to={projectDViewUri}>\r\n            <Button \r\n            outline \r\n            className=\"btn-round\" \r\n            size=\"md\">View</Button>\r\n        </Link>\r\n        {/* Commented out until EditProject and AddUserSearchBar are active */}\r\n        {/* <Link \r\n        to={editProjectUri}>\r\n            <Button \r\n            outline \r\n            className=\"btn-round\" \r\n            size=\"md\">Edit</Button>\r\n        </Link> */}\r\n        <Button \r\n        outline \r\n        className=\"btn-round\" \r\n        size=\"md\" \r\n        onClick={onChangeDeleteButton}>Delete</Button>\r\n        <Modal \r\n        isOpen={deleteModalState} \r\n        toggle={onChangeDeleteButton}>\r\n            <ModalHeader \r\n            toggle={onChangeDeleteButton}>Delete Project</ModalHeader>\r\n            <ModalBody>Are you sure you would like to delete this project?</ModalBody>\r\n            <ModalFooter>\r\n                <Button \r\n                color=\"primary\" \r\n                onClick={onDeleteProject}>Yes</Button>\r\n                <Button \r\n                color=\"secondary\" \r\n                onClick={onChangeDeleteButton}>No</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>  \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProjectsTableRow;","import React from 'react'\r\n\r\n// reactstrap components./ProjectsTableHeader.components\r\nimport { Container } from \"reactstrap\";\r\n\r\nimport ProjectsTableHeader from \"./ProjectsTableHeader.components\";\r\nimport ProjectsTableButton from \"./ProjectsTableButton.components\";\r\nimport ProjectsTableRow from \"./ProjectsTableRow.components\";\r\nimport ProjectSpinner from \"../ProjectSpinner.components\";\r\n\r\nimport { useDashboardContext } from \"../DashboardPrivate.components\"\r\n\r\nfunction ProjectsTable () {\r\n    const dbContext = useDashboardContext();\r\n    \r\n    const renderedProjects = (() => {\r\n        if (dbContext.userState.projects && dbContext.userState.projects.length > 0) {\r\n            let projects = dbContext.userState.projects\r\n            \r\n            return projects.map(project =>\r\n            <div className=\"row\" key={project}>\r\n                <Container key={project}><ProjectsTableRow key={project} project={project} /></Container>\r\n            </div>\r\n            )\r\n        } else if (dbContext.userState.projects && dbContext.userState.projects.length < 1) {\r\n            return <p>You currently have no projects.</p>\r\n        }\r\n        else {\r\n            return <ProjectSpinner />\r\n        }\r\n    })();\r\n\r\n    return (\r\n    <>\r\n    <div className=\"row\">\r\n        <Container>\r\n            <div className=\"float-left\"><ProjectsTableHeader /></div>\r\n            <div className=\"float-right\"><ProjectsTableButton /></div>\r\n        </Container>\r\n    </div>\r\n    {renderedProjects ? renderedProjects : <ProjectSpinner />}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProjectsTable;","import React from 'react'\r\nimport {Container} from \"reactstrap\";\r\n\r\nimport TeamTableHeader from './TeamTableHeader.components'\r\nimport TeamTableButton from \"./TeamTableButton.components\"\r\nimport TeamTableRow from \"./TeamTableButton.components\"\r\n\r\nfunction TeamTable () {\r\n    return (\r\n    <>\r\n    <Container>\r\n        <div className=\"col-md-12\"><TeamTableHeader /></div>\r\n        <div className=\"col-md-12\"><TeamTableButton /></div>\r\n    </Container>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TeamTable;","import React from \"react\";\r\nimport {Container} from \"reactstrap\";\r\n\r\n// Import child components\r\nimport WelcomeText from \"./dashboard/WelcomeText.components\"\r\nimport ProjectsTable from \"./dashboard/ProjectsTable.components\"\r\nimport TeamTable from \"./dashboard/TeamTable.components\"\r\nimport TransparentFooter from \"./TransparentFooter\"\r\n\r\n// Import services\r\nimport {useAuthContext, checkAuth, fetchUserProfile} from \"../services/AuthReducer\"\r\n\r\nexport const DashboardContext = React.createContext();\r\nexport const useDashboardContext = () => {return React.useContext(DashboardContext)}\r\n\r\nfunction DashboardPrivate() {\r\n  const [userState, setUserState] = React.useState({\r\n    'username':\"\",\r\n    'firstname':\"\",\r\n    'lastname':\"\",\r\n    \"position\":\"\",\r\n    \"projects\":[]\r\n  });\r\n\r\n  let pageHeader = React.createRef();\r\n  const auth = useAuthContext();\r\n\r\n  React.useEffect(() => {\r\n    checkAuth(auth);\r\n    (async () => {\r\n      const user = await fetchUserProfile(auth);\r\n      setUserState({\r\n        'username': user.username,\r\n        'firstname': user.firstname,\r\n        'lastname': user.lastname,\r\n        'position': user.position,\r\n        'projects': user.projects\r\n      });\r\n    })();\r\n\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.body.classList.add(\"login-page\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n  }, [auth]);\r\n\r\n  return (\r\n    <>\r\n    <DashboardContext.Provider value={{\r\n      userState\r\n    }}>\r\n      <div className=\"page-header clear-filter\" filter-color=\"blue\">\r\n        <div className=\"page-header-image\" \r\n        style={{\r\n            backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"\r\n            }} ref={pageHeader}></div>\r\n          <Container><WelcomeText></WelcomeText></Container>\r\n          <Container>\r\n            <div className=\"float-left col-md-6\"><ProjectsTable /></div>\r\n            {/* <div className=\"float-right col-md-6\"><TeamTable /></div> */}\r\n          </Container>\r\n          <TransparentFooter />\r\n      </div>\r\n      </DashboardContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardPrivate;","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { Button, Container, Form, Input, InputGroup, Col} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\n// Import child components\r\nimport TransparentFooter from './TransparentFooter';\r\nimport ProjectSpinner from './ProjectSpinner.components';\r\n\r\n// Import services\r\nimport { useAuthContext, checkAuth } from \"../services/AuthReducer\";\r\n\r\nconst ProfilePrivate = () => {\r\n  const auth = useAuthContext();\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const res = await axios.get(`${process.env.REACT_APP_BASE_SERVER_URL}/users/profile`, \r\n      {\r\n        withCredentials: true\r\n      });\r\n      \r\n      if (!res.data.error) {\r\n        setUsernameState(res.data.username);\r\n        setFirstNameState(res.data.firstname);\r\n        setLastNameState(res.data.lastname);\r\n      };\r\n    \r\n    } catch (err) {\r\n      console.log(err);\r\n      auth.handleLogout();\r\n  };\r\n};\r\n\r\n  // Define states\r\n  const[usernameState, setUsernameState] = React.useState(\"\")\r\n  const[firstNameState, setFirstNameState] = React.useState(\"\")\r\n  const[lastNameState, setLastNameState] = React.useState(\"\")\r\n  const[editProfileState, setEditProfileState] = React.useState(\"\")\r\n\r\n  // Define functions to set states of register form variables\r\n  const onChangeUsername = (e) => {\r\n    setUsernameState(e.target.value);\r\n  };\r\n  const onChangeFirstName = (e) => {\r\n    setFirstNameState(e.target.value);\r\n  };\r\n  const onChangeLastName = (e) => {\r\n    setLastNameState(e.target.value);\r\n  };\r\n\r\n  // Define state variables for focus feature\r\n  const [usernameFocus, setUsernameFocus] = React.useState(false);\r\n  const [firstNameFocus, setFirstNameFocus] = React.useState(false);\r\n  const [lastNameFocus, setLastNameFocus] = React.useState(false);\r\n\r\n  const onFireUsernameFocus = () => {\r\n    setUsernameFocus(true);\r\n  };\r\n\r\n  const onFireUsernameBlur = () => {\r\n    setUsernameFocus(false);\r\n  };\r\n\r\n  const onFireFirstNameFocus = () => {\r\n    setFirstNameFocus(true);\r\n  };\r\n\r\n  const onFireFirstNameBlur = () => {\r\n    setFirstNameFocus(false);\r\n  };\r\n\r\n  const onFireLastNameFocus = () => {\r\n    setLastNameFocus(true);\r\n  };\r\n\r\n  const onFireLastNameBlur = () => {\r\n    setLastNameFocus(false);\r\n  };\r\n\r\n  // Define function for form submission to update user profile\r\n  const saveUserProfile = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const updateUser = {\r\n      \"username\": usernameState,\r\n      \"firstname\": firstNameState,\r\n      \"lastname\": lastNameState,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/users/update`, \r\n      updateUser,\r\n      {\r\n        withCredentials:true\r\n      }\r\n      );\r\n    \r\n    } catch (err) {\r\n      console.log(err)\r\n    };\r\n  };\r\n\r\nconst onFireSaveProfile = (e) => {\r\n  if (editProfileState) {\r\n    saveUserProfile(e);\r\n  }; \r\n  setEditProfileState(!editProfileState);\r\n};\r\n\r\n  let pageHeader = React.createRef();\r\n\r\n  React.useEffect(() => {\r\n    checkAuth(auth)\r\n    // Fetch information from backend API\r\n    fetchUserProfile()\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.body.classList.add(\"login-page\");\r\n    document.documentElement.classList.remove(\"nav-open\")\r\n\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform =\r\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div \r\n      className=\"page-header clear-filter\" \r\n      filter-color=\"blue\">\r\n        <div \r\n        className=\"page-header-image\" \r\n        style={{backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"}}\r\n        ref={pageHeader}>\r\n        </div>\r\n        <Container>\r\n          <Form \r\n          onSubmit={saveUserProfile} \r\n          className=\"form\" \r\n          method=\"POST\">\r\n            <Col \r\n            className=\"ml-auto mr-auto\" \r\n            md=\"4\">\r\n              <h5 \r\n              className=\"title\">Username</h5>\r\n              <h5 \r\n              className=\"description\" \r\n              hidden={editProfileState}>{usernameState ? usernameState : <ProjectSpinner />}</h5>\r\n              <InputGroup \r\n              hidden={!editProfileState} \r\n              className={\"no-border input-lg\" + (usernameFocus ? \" input-group-focus\" : \"\")}>\r\n                <Input \r\n                value={usernameState}\r\n                type=\"text\" \r\n                style={{color:\"#ffffff\"}}\r\n                onChange = {onChangeUsername}\r\n                onFocus={onFireFirstNameFocus} \r\n                onBlur={onFireFirstNameBlur}></Input>\r\n                </InputGroup>\r\n                <h5 \r\n                className=\"title\">First Name</h5>\r\n                <h5 \r\n                className=\"description\" \r\n                hidden={editProfileState}>{firstNameState ? firstNameState : <ProjectSpinner />}</h5>\r\n                <InputGroup \r\n                hidden={!editProfileState} \r\n                className={\"no-border input-lg\" + (firstNameFocus ? \" input-group-focus\" : \"\")}>\r\n                  <Input \r\n                  value={firstNameState} \r\n                  type=\"text\" \r\n                  style={{color:\"#ffffff\"}}\r\n                  onChange = {onChangeFirstName}\r\n                  onFocus={onFireUsernameFocus} \r\n                  onBlur={onFireUsernameBlur}></Input>\r\n                  </InputGroup>\r\n                  <h5 \r\n                  className=\"title\">Last Name</h5>\r\n                  <h5 \r\n                  className=\"description\" \r\n                  hidden={editProfileState}>{lastNameState ? lastNameState : <ProjectSpinner />}</h5>\r\n                  <InputGroup \r\n                  hidden={!editProfileState} \r\n                  className={\"no-border input-lg\" + (lastNameFocus ? \" input-group-focus\" : \"\")}>\r\n                    <Input \r\n                    value={lastNameState} \r\n                    type=\"text\" style={{color:\"#ffffff\"}}\r\n                    onChange = {onChangeLastName}\r\n                    onFocus={onFireLastNameFocus} \r\n                    onBlur={onFireLastNameBlur}></Input>\r\n                  </InputGroup>\r\n                  <Button \r\n                  outline \r\n                  className=\"btn-round\" \r\n                  size=\"md\"\r\n                  onClick={onFireSaveProfile}>{editProfileState ? (\"Save Profile\") : (\"Edit Profile\")}\r\n                  </Button>\r\n                  {/* Commented until Change Password and Change Email features implemented */}\r\n                  {/* <Container> */}\r\n                  {/* <Button outline className=\"btn-round\" size=\"md\"\r\n                    onClick={() => {}}>Change Password\r\n                  </Button>\r\n                  <Button outline className=\"btn-round\" size=\"md\"\r\n                    onClick={() => {}}>Change Email\r\n                  </Button> */}\r\n                  {/* </Container> */}\r\n            </Col>\r\n          </Form>                                                 \r\n        </Container>\r\n      <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePrivate;","import React from \"react\";\r\nimport { UncontrolledPopover, PopoverBody, InputGroup, Col, Row, Button, Input, Container } from \"reactstrap\";\r\nimport axios from 'axios';\r\n\r\n/**\r\n * Custom user search bar that takes in username as input and checks with MongoDB index whether username exists\r\n * If exists, adds it to parent component state\r\n * Must pass down the following props from parent component\r\n * \r\n * onChangeParentCompUsersState \r\n * - parent component setState method for array of usernames to be saved (e.g. members/admins for project, members for task);\r\n * - pass in renderedMembers as argument to ensure usernames state in searchbar component is matched with parent compoonent at the end of every render\r\n * (via useEffect)\r\n * \r\n * searchBarId \r\n * - to allow error messages (shown via popovers) to be shown to the correct input text field\r\n */\r\n\r\nconst AddUserSearchBar = (props) => {\r\n    const [renderedMembers, setRenderedMembers] = React.useState([]);\r\n    const [usernameInput, setUsernameInput] = React.useState(\"\");\r\n\r\n    const [searchBarFocus, setSearchBarFocus] = React.useState(false);\r\n    const [showUsernameInputPopover, setShowUsernameInputPopover] = React.useState(false);\r\n    const [usernameInputPopoverMsg, setUsernameInputPopoverMsg] = React.useState(\"\");\r\n\r\n    const addUserToRenderedMembers = async () => {\r\n        if (!renderedMembers.includes(usernameInput)) {\r\n            try {\r\n                const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/users/search-mongo`,\r\n                {\r\n                    value: usernameInput\r\n                },\r\n                {\r\n                    withCredentials: true\r\n                });\r\n\r\n                if (res.data.usernames.length > 0) {\r\n                    pushElement();\r\n                    setShowUsernameInputPopover(!showUsernameInputPopover);\r\n                    setUsernameInputPopoverMsg(\"Username \" + `${usernameInput}` +\" added.\");\r\n                };\r\n\r\n            } catch (err) {\r\n                if (err.response.data.description === \"NO_USERS_FOUND\") {\r\n                    setShowUsernameInputPopover(!showUsernameInputPopover);\r\n                    setUsernameInputPopoverMsg(\"Username \" + `${usernameInput}` + \" does not exist.\");\r\n                } else {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        } else {\r\n            setShowUsernameInputPopover(!showUsernameInputPopover);\r\n            setUsernameInputPopoverMsg(\"Username already added.\");\r\n        };\r\n    };\r\n\r\n    const pushElement = () => {\r\n        let newRenderedMembers = renderedMembers;\r\n        newRenderedMembers.push(usernameInput);\r\n        setRenderedMembers(newRenderedMembers);\r\n        clearUsernameInput();\r\n    };\r\n\r\n    const popElement = (el) => {\r\n        let newRenderedMembers = renderedMembers;\r\n        setRenderedMembers(newRenderedMembers.filter(member => {\r\n            return member !== el;\r\n        }));\r\n        setShowUsernameInputPopover(!showUsernameInputPopover);\r\n        setUsernameInputPopoverMsg(\"Username \" + el +\" removed.\");\r\n        clearUsernameInput();\r\n    };\r\n\r\n    const onChangeUsernameInput = (e) => {\r\n        setUsernameInput(e.target.value);\r\n    };\r\n\r\n    const clearUsernameInput = () => {\r\n        setUsernameInput(\"\");\r\n    };\r\n\r\n    const onSearchBarFocus = () => {\r\n        setSearchBarFocus(!searchBarFocus);\r\n    };\r\n\r\n    const onToggleUsernameInputPopover = () => {\r\n        setShowUsernameInputPopover(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        props.onChangeParentCompUsersState(renderedMembers)\r\n    }, [props, renderedMembers]);\r\n\r\n    return (\r\n        <>\r\n        <InputGroup \r\n        className={\"no-border input-lg\" + (searchBarFocus ?  \"input-group-focus\" : \"\")}>\r\n        <Container>\r\n            <Row>\r\n                <Col \r\n                className=\"d-flex align-items-center\">\r\n                    <Input\r\n                    id={\"addMembersField\" + props.searchBarId}\r\n                    onChange={onChangeUsernameInput}\r\n                    onFocus={onSearchBarFocus}\r\n                    type=\"text\"\r\n                    placeholder={usernameInput}\r\n                    value={usernameInput}></Input>\r\n                </Col>\r\n                <UncontrolledPopover \r\n                trigger=\"click\" \r\n                toggle={onToggleUsernameInputPopover}\r\n                placement=\"right\" \r\n                isOpen={showUsernameInputPopover} \r\n                target={\"addMembersField\" + props.searchBarId}>\r\n                <PopoverBody>{usernameInputPopoverMsg}</PopoverBody>\r\n                </UncontrolledPopover>\r\n                <Col xs=\"3\">\r\n                    <Button\r\n                    outline\r\n                    block\r\n                    className=\"btn-round\"\r\n                    onClick={addUserToRenderedMembers}>Add</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {renderedMembers.map(el => (\r\n                <Col \r\n                key={el}>\r\n                    <Button\r\n                    key={el} \r\n                    outline \r\n                    onClick={()=> {popElement(el)}} \r\n                    >{el} <i className=\"now-ui-icons ui-1_simple-remove\" />\r\n                    </Button>\r\n                </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n        </InputGroup>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddUserSearchBar;","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Label, Button, Card, CardBody, CardFooter, Form, Input, InputGroup, Container, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\n// Import child components\r\nimport TransparentFooter from './TransparentFooter';\r\nimport SearchBar from './AddUserSearchBar.components';\r\n\r\n// Import services\r\nimport { fetchUserProfile, useAuthContext } from \"../services/AuthReducer\";\r\n\r\nconst AddNewProject = () => {\r\n  let pageHeader = React.createRef();\r\n  const auth = useAuthContext()\r\n\r\n    // Create state to store entered username and pw\r\n    const [projectNameState, setProjectNameState] = React.useState(\"\");\r\n    const [projectDescriptionState, setProjectDescriptionState] = React.useState(\"\");\r\n    const [membersState, setMembersState] = React.useState([]);\r\n    const [adminsState, setAdminsState] = React.useState([]);\r\n    \r\n    // Create state for focus; leave out for members and admins\r\n    const [projectNameFocus, setProjectNameFocus] = React.useState(false);\r\n    const [projectDescriptionFocus, setProjectDescriptionFocus] = React.useState(false);\r\n\r\n    // Create state for redirect\r\n    const [fireRedirectDashboard, setFireRedirectDashboard] = React.useState(false)\r\n    const onFireRedirectDashboard = () => {\r\n      setFireRedirectDashboard(true)\r\n    };\r\n  \r\n    // Define form save functions\r\n    const onChangeProjectNameState = (e) => {\r\n      setProjectNameState(e.target.value);\r\n    };\r\n\r\n    const onChangeProjectDescriptionState = (e) => {\r\n      setProjectDescriptionState(e.target.value)\r\n    };\r\n\r\n    const onChangeMembersState = (newMembersState) => {\r\n      setMembersState(newMembersState);\r\n    };\r\n\r\n    const onChangeAdminsState = (newAdminsState) => {\r\n      setAdminsState(newAdminsState);\r\n    };\r\n\r\n    const onFocusProjectName = () => {\r\n      setProjectNameFocus(true);\r\n    };\r\n\r\n    const onBlurProjectName = () => {\r\n      setProjectNameFocus(false);\r\n    };\r\n\r\n    const onFocusProjectDescription = () => {\r\n      setProjectDescriptionFocus(true);\r\n    };\r\n\r\n    const onBlurProjectDescription = () => {\r\n      setProjectDescriptionFocus(false);\r\n    };\r\n\r\n    const onCreateProject = async () => { \r\n      try {\r\n          const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/projects/add`, {\r\n            \"name\": projectNameState,\r\n            \"description\": projectDescriptionState,\r\n            \"members\": membersState,\r\n            \"admins\": adminsState\r\n          },\r\n          {\r\n            withCredentials: true\r\n          });\r\n    \r\n          if (!res.data.error) {\r\n            onFireRedirectDashboard();\r\n    \r\n        }\r\n      } catch (err) {\r\n          console.log(err)\r\n        }\r\n      };\r\n\r\n    const onFireCreateProject = () => {\r\n      onCreateProject();\r\n    };\r\n  \r\n    React.useEffect(() => {\r\n      // Additional form features\r\n      document.body.classList.add(\"login-page\");\r\n      document.body.classList.add(\"sidebar-collapse\");\r\n      document.documentElement.classList.remove(\"nav-open\");\r\n      window.scrollTo(0, 0);\r\n      document.body.scrollTop = 0;\r\n      \r\n      // Fetch user data and set admin to hold username of current logged-in user\r\n      (async () => {\r\n        const user = await fetchUserProfile(auth)\r\n        setAdminsState([user.username])\r\n      })();\r\n      \r\n      return function cleanup() {\r\n        document.body.classList.remove(\"login-page\");\r\n        document.body.classList.remove(\"sidebar-collapse\");\r\n      };\r\n    }, [auth]);\r\n\r\n  return (\r\n    <>\r\n    {fireRedirectDashboard && <Redirect to=\"/dashboard\">push={true}</Redirect>}\r\n      <div \r\n      className=\"page-header clear-filter\" \r\n      filter-color=\"blue\">\r\n        <div \r\n        className=\"page-header-image\" \r\n        style={{backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"}} \r\n        ref={pageHeader}></div>\r\n          <Container>\r\n            <h1 \r\n            className=\"float-left\">Create New Project</h1>\r\n          </Container>\r\n          <Container>\r\n            <Col \r\n            className=\"mr-auto\" \r\n            md=\"6\">\r\n              <Card \r\n              className=\"card-plain\">\r\n                <Form \r\n                action=\"\" \r\n                className=\"form\" \r\n                method=\"\">\r\n                  <CardBody>\r\n                    <Label \r\n                    className=\"float-left\">\r\n                      <h6>Project Name</h6>\r\n                    </Label>\r\n                    <InputGroup \r\n                    className={\"no-border input-lg\" + (projectNameFocus ?  \"input-group-focus\" : \"\")}>\r\n                      <Input \r\n                      type=\"text\"\r\n                      onChange={onChangeProjectNameState}\r\n                      onFocus={onFocusProjectName}\r\n                      onBlur={onBlurProjectName}></Input>\r\n                    </InputGroup>\r\n                    <Label \r\n                    className=\"float-left\">\r\n                      <h6>Project Description</h6>\r\n                    </Label>\r\n                    <InputGroup \r\n                    className={\"no-border input-lg\" + (projectDescriptionFocus ? \" input-group-focus\" : \"\")}>\r\n                      <Input \r\n                      type=\"textarea\" \r\n                      onChange={onChangeProjectDescriptionState}\r\n                      onFocus={onFocusProjectDescription}\r\n                      onBlur={onBlurProjectDescription}>\r\n                      </Input>\r\n                    </InputGroup>\r\n                    <Label \r\n                    className=\"float-left\">\r\n                      <h6>Add Members</h6>\r\n                    </Label>\r\n                    <InputGroup>\r\n                      <SearchBar\r\n                      onChangeParentCompUsersState={onChangeMembersState}\r\n                      searchBarId={1}/>\r\n                    </InputGroup>\r\n                    <Label className=\"float-left\"><h6>Add Admins</h6></Label>\r\n                    <InputGroup>\r\n                      <SearchBar\r\n                      onChangeParentCompUsersState={onChangeAdminsState}\r\n                      searchBarId={2}/>\r\n                    </InputGroup>\r\n                  </CardBody>\r\n                  <CardFooter \r\n                  className=\"text-center\">\r\n                    <Button \r\n                    outline \r\n                    block \r\n                    className=\"btn-round\" \r\n                    onClick={onFireCreateProject} \r\n                    size=\"lg\">Create Project</Button>\r\n                  </CardFooter>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Container>\r\n          <TransparentFooter />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewProject;","import React from 'react';\r\nimport { Container, Col, Row } from 'reactstrap';\r\nimport ProjectSpinner from \"../ProjectSpinner.components\";\r\n\r\nfunction ProjectDViewHeaderText(props) {\r\n    return(\r\n        <>\r\n        <Container>\r\n            <Col>\r\n            <Row><h2>{props.pdvContext.projectData.name ? props.pdvContext.projectData.name : <ProjectSpinner />}</h2></Row>\r\n            <Row><h5>{props.pdvContext.projectData.description ? props.pdvContext.projectData.description : <ProjectSpinner />}</h5></Row>\r\n            </Col>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectDViewHeaderText;","import React from 'react';\r\n\r\n// Create context for ProjectDView and export for child components\r\nexport const ProjectDViewContext = React.createContext();\r\n\r\n// For class based child components\r\nexport const ProjectDViewProvider = ProjectDViewContext.Provider;\r\nexport const ProjectDViewConsumer = ProjectDViewContext.Consumer;\r\n\r\n// For functional based child components\r\nexport const useProjectDViewContext = () => {\r\n    return React.useContext(ProjectDViewContext);\r\n};\r\n\r\nexport default ProjectDViewContext;","import React from \"react\";\r\nimport { Label, Form, Input, InputGroup, FormGroup } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport { useProjectDViewContext } from './ProjectDViewContext';\r\n\r\nexport function ProjectDViewAddFeatureForm(props) {\r\n  const pdvContext = useProjectDViewContext();\r\n\r\n  const [featureNameState, setFeatureNameState] = React.useState(\"\");\r\n  const [featureDescriptionState, setFeatureDescriptionState] = React.useState(\"\");\r\n  const [featureMembersState, setFeatureMembersState] = React.useState([]);\r\n  const [featureCreatorState, setFeatureCreatorState] = React.useState(\"\");\r\n  \r\n  // Create state for focus\r\n  const [featureNameFocus, setFeatureNameFocus] = React.useState(false);\r\n  const onFeatureNameFocus = () => {setFeatureNameFocus(true)};\r\n  const onFeatureNameBlur = () => {setFeatureNameFocus(false)};\r\n\r\n  const [featureDescriptionFocus, setFeatureDescriptionFocus] = React.useState(false);\r\n  const onFeatureDescriptionFocus = () => {setFeatureDescriptionFocus(true)};\r\n  const onFeatureDescriptionBlur = () => {setFeatureDescriptionFocus(false)};\r\n\r\n  // Define form save functions\r\n  const onChangeFeatureNameState = (e) => {setFeatureNameState(e.target.value)};\r\n  const onChangeFeatureDescriptionState = (e) => {setFeatureDescriptionState(e.target.value)};\r\n  const onChangeFeatureMembersState = (e) => {\r\n    let options = e.target.options;\r\n    let membersSelected = [];\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      if (options[i].selected) {\r\n        membersSelected.push(options[i].value);\r\n      };\r\n    };\r\n\r\n    setFeatureMembersState(membersSelected);\r\n  };\r\n\r\n  // Define form submission functions\r\n  const onFireReload = () => {\r\n    window.location.reload();\r\n  };\r\n  \r\n  const onCreateFeature = async () => { \r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/features/add/${pdvContext.projectData.name}`, {\r\n        \"name\": featureNameState,\r\n        \"description\": featureDescriptionState,\r\n        \"members\": featureMembersState\r\n      },\r\n      {\r\n        withCredentials: true\r\n      });\r\n      \r\n      if (!res.data.error) {\r\n        onFireReload();\r\n      }\r\n    } catch (err) {\r\n      // How to print out validation errors?\r\n      console.log(err)\r\n    };\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // Fetch current user\r\n    setFeatureCreatorState(pdvContext.userData.username);\r\n\r\n    if (props.onFireCreateFeature) {\r\n      onCreateFeature();\r\n    };\r\n\r\n  }, [pdvContext.userData.username, props.onFireCreateFeature]);\r\n\r\n  return (\r\n    <>\r\n      <Form action=\"\" className=\"form\" method=\"\">\r\n        <FormGroup>\r\n          <Label className=\"float-left\">Name</Label>\r\n          <InputGroup className={\"no-border input-sm\" + (featureNameFocus ?  \"input-group-focus\" : \"\")}>\r\n            <Input \r\n            type=\"text\"\r\n            onChange={onChangeFeatureNameState}\r\n            onFocus={onFeatureNameFocus}\r\n            onBlur={onFeatureNameBlur}></Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label \r\n          className=\"float-left\">Description</Label>\r\n          <InputGroup \r\n          className={\"no-border input-sm\" + (featureDescriptionFocus ? \" input-group-focus\" : \"\")}>\r\n              <Input \r\n              type=\"textarea\" \r\n              onChange={onChangeFeatureDescriptionState}\r\n              onFocus={onFeatureDescriptionFocus}\r\n              onBlur={onFeatureDescriptionBlur}></Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label \r\n          className=\"float-left\">Add Members</Label>\r\n          <Input \r\n          type=\"select\" \r\n          name=\"select\" \r\n          id=\"membersSelect\" \r\n          onChange={onChangeFeatureMembersState} \r\n          multiple>\r\n            <option value=\"member1\">Member 1</option>\r\n            <option value=\"member2\">Member 2</option>    \r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label className=\"float-left\" for=\"creator\">Created By</Label>\r\n          <br /><InputGroup id=\"creator\">{featureCreatorState}</InputGroup>\r\n        </FormGroup>\r\n        </Form>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { UncontrolledAlert, Label, Form, Input, InputGroup, FormGroup } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport { useProjectDViewContext } from './ProjectDViewContext';\r\n\r\nexport function ProjectDViewAddTaskForm(props) {\r\n  const pdvContext = useProjectDViewContext();\r\n\r\n  const [taskNameState, setTaskNameState] = React.useState(\"\");\r\n  const [taskDescriptionState, setTaskDescriptionState] = React.useState(\"\");\r\n  const [taskMembersState, setTaskMembersState] = React.useState([]);\r\n  const [taskCreatorState, setTaskCreatorState] = React.useState(\"\");\r\n  const [taskFeatureState, setTaskFeatureState] = React.useState(\"\");\r\n  const [taskStartDateState, setTaskStartDateState] = React.useState();\r\n  const [taskEndDateState, setTaskEndDateState] = React.useState();\r\n  \r\n  // Create state for focus\r\n  const [taskNameFocus, setTaskNameFocus] = React.useState(false);\r\n  const onTaskNameFocus = () => {\r\n    setTaskNameFocus(true)\r\n  };\r\n  const onTaskNameBlur = () => {\r\n    setTaskNameFocus(false)\r\n  };\r\n\r\n  const [taskDescriptionFocus, setTaskDescriptionFocus] = React.useState(false);\r\n  const onTaskDescriptionFocus = () => {\r\n    setTaskDescriptionFocus(true)\r\n  };\r\n  const onTaskDescriptionBlur = () => {\r\n    setTaskDescriptionFocus(false)\r\n  };\r\n\r\n  const [visibleCreateTaskAlert, setVisibleCreateTaskAlert] = React.useState(false);\r\n  const onFireVisibleCreateTaskAlert = () => {\r\n    setVisibleCreateTaskAlert(true);\r\n  };\r\n  const onDismissVisibleCreateTaskAlert = () => {\r\n    setVisibleCreateTaskAlert(false);\r\n  }\r\n\r\n  // Define form save functions\r\n  const onChangeTaskNameState = (e) => {\r\n    setTaskNameState(e.target.value)\r\n  };\r\n  const onChangeTaskDescriptionState = (e) => {\r\n    setTaskDescriptionState(e.target.value)\r\n  };\r\n  const onChangeTaskMembersState = (e) => {\r\n    let options = e.target.options;\r\n    let membersSelected = [];\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      if (options[i].selected) {\r\n        membersSelected.push(options[i].value);\r\n      };\r\n    };\r\n\r\n    setTaskMembersState(membersSelected);\r\n  };\r\n  const onChangeTaskFeatureState = (e) => {\r\n    setTaskFeatureState(e.target.value)\r\n  };\r\n  const onChangeTaskStartDateState = (e) => {\r\n    setTaskStartDateState(e.target.value)\r\n  };\r\n  const onChangeTaskEndDateState = (e) => {\r\n    setTaskEndDateState(e.target.value)\r\n  };\r\n\r\n  // Define form submission functions\r\n  const onFireReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const onCreateTask = async () => { \r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/tasks/add/${pdvContext.projectData.name}`, {\r\n        \"name\": taskNameState,\r\n        \"description\": taskDescriptionState,\r\n        \"members\": taskMembersState,\r\n        \"startDate\": taskStartDateState,\r\n        \"endDate\": taskEndDateState,\r\n        \"featureName\": taskFeatureState\r\n      },\r\n      {\r\n        withCredentials: true\r\n      });\r\n  \r\n      if (!res.data.error) {\r\n        onFireReload();\r\n        onFireVisibleCreateTaskAlert();\r\n      };\r\n    } catch (err) {\r\n      console.log(err);\r\n    };\r\n  };\r\n  \r\n  // Create features as options for multiselect field\r\n  const renderedFeatures = (\r\n    () => {\r\n      if (pdvContext.projectData.features && pdvContext.projectData.features.length > 0) {\r\n        let features = pdvContext.projectData.features;\r\n        return features.map(feature => <option key={feature.name} value={feature.name}>{feature.name}</option>);\r\n      };\r\n    }\r\n    )();\r\n  \r\n  React.useEffect(() => {\r\n    // Fetch current user to assign to creator\r\n    setTaskCreatorState(pdvContext.userData.username);\r\n\r\n    // Set trigger for POST req to API\r\n    if (props.onFireCreateTask) {\r\n      onCreateTask();\r\n    };\r\n  }, [pdvContext.userData.username, props.onFireCreateTask]);\r\n\r\n  return (\r\n    <>\r\n    <UncontrolledAlert \r\n    isOpen={visibleCreateTaskAlert} \r\n    toggle={onDismissVisibleCreateTaskAlert} \r\n    color=\"info\">Task created successfully!</UncontrolledAlert>\r\n    <Form \r\n    action=\"\" \r\n    className=\"form\" \r\n    method=\"\">\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\">Name</Label>\r\n        <InputGroup \r\n        className={\"no-border input-lg\" + (taskNameFocus ?  \"input-group-focus\" : \"\")}>\r\n          <Input \r\n          type=\"text\"\r\n          onChange={onChangeTaskNameState}\r\n          onFocus={onTaskNameFocus}\r\n          onBlur={onTaskNameBlur}></Input>\r\n        </InputGroup>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\">Description</Label>\r\n        <InputGroup \r\n        className={\"no-border input-lg\" + (taskDescriptionFocus ? \" input-group-focus\" : \"\")}>\r\n            <Input \r\n            type=\"textarea\" \r\n            onChange={onChangeTaskDescriptionState}\r\n            onFocus={onTaskDescriptionFocus}\r\n            onBlur={onTaskDescriptionBlur}></Input>\r\n        </InputGroup>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\" \r\n        for=\"membersSelect\">Add Members</Label>\r\n        <Input \r\n        type=\"select\" \r\n        name=\"select\" \r\n        id=\"membersSelect\" \r\n        onChange={onChangeTaskMembersState} \r\n        multiple>\r\n          <option \r\n          value=\"member1\">Member 1</option>\r\n          <option \r\n          value=\"member2\">Member 2</option>    \r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\" \r\n        for=\"featureSelect\">Feature</Label>\r\n        <Input \r\n        type=\"select\" \r\n        name=\"select\" \r\n        id=\"featureSelect\" \r\n        onChange={onChangeTaskFeatureState}>\r\n          <option \r\n          value=\"default\">Default</option>\r\n          {renderedFeatures}\r\n        </Input> \r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\" \r\n        for=\"startDate\">Start Date</Label>\r\n        <Input\r\n          type=\"date\"\r\n          id=\"startDate\"\r\n          placeholder=\"date placeholder\"\r\n          onChange={onChangeTaskStartDateState}></Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\" \r\n        for=\"endDate\">End Date</Label>\r\n        <Input\r\n          type=\"date\"\r\n          id=\"endDate\"\r\n          placeholder=\"date placeholder\"\r\n          onChange={onChangeTaskEndDateState}></Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label \r\n        className=\"float-left\" \r\n        for=\"creator\">Created By</Label>\r\n        <InputGroup>{taskCreatorState}</InputGroup>\r\n      </FormGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nimport { ProjectDViewAddFeatureForm } from './ProjectDViewAddFeatureForm.components';\r\nimport { ProjectDViewAddTaskForm } from './ProjectDViewAddTaskForm.components';\r\n\r\nfunction ProjectDViewHeaderButtons() {\r\n    const [showAddFeatureModal, setShowAddFeatureModal] = React.useState(false);\r\n    const [showAddTaskModal, setShowAddTaskModal] = React.useState(false);\r\n\r\n    const [onFireCreateFeature, setOnFireCreateFeature] = React.useState(false);\r\n    const [onFireCreateTask, setOnFireCreateTask] = React.useState(false);\r\n\r\n    const toggleAddFeatureModal = () => {\r\n        setShowAddFeatureModal(!showAddFeatureModal)\r\n    };\r\n    const toggleAddTaskModal = () => {\r\n        setShowAddTaskModal(!showAddTaskModal)\r\n    };\r\n\r\n    const onChangeCreateFeatureButton = () => {\r\n        setOnFireCreateFeature(true)\r\n    };\r\n    const onChangeCreateTaskButton = () => {\r\n        setOnFireCreateTask(true)\r\n    };\r\n\r\n    const [dropDownState, setDropDownState] = React.useState(false)\r\n    const onFireDropDown = () => {setDropDownState(!dropDownState)}\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col xs=\"4\" />\r\n            <Col xs=\"4\" />\r\n            <Col xs=\"4\">\r\n                <Dropdown isOpen={dropDownState} toggle={onFireDropDown}>\r\n                    <DropdownToggle caret outline className=\"btn-dropdown btn-round\">\r\n                        New\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                        <DropdownItem onClick = {toggleAddFeatureModal}>Feature</DropdownItem>\r\n                        <DropdownItem onClick = {toggleAddTaskModal}>Task</DropdownItem>\r\n                    </DropdownMenu>\r\n                </Dropdown>\r\n                <Modal isOpen={showAddFeatureModal} toggle={toggleAddFeatureModal}>\r\n                    <ModalHeader>Add Feature</ModalHeader>\r\n                    <ModalBody>\r\n                        <ProjectDViewAddFeatureForm onFireCreateFeature={onFireCreateFeature}/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\"btn-info\" onClick={onChangeCreateFeatureButton}>Create Feature</Button>\r\n                        <Button className=\"btn-secondary\" onClick={toggleAddFeatureModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={showAddTaskModal} toggle={toggleAddTaskModal}>\r\n                <ModalHeader>Add Task</ModalHeader>\r\n                <ModalBody>\r\n                    <ProjectDViewAddTaskForm onFireCreateTask={onFireCreateTask}/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"btn-info\" onClick={onChangeCreateTaskButton}>Create Task</Button>\r\n                    <Button className=\"btn-secondary\" onClick={toggleAddTaskModal}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            </Col>\r\n      </Row>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ProjectDViewHeaderButtons;","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport ProjectDViewText from './ProjectDViewHeaderText.components';\r\nimport ProjectDViewButtons from './ProjectDViewHeaderButtons.components';\r\nimport ProjectDViewDropdown from './ProjectDViewHeaderDropdown.components';\r\n\r\n// Import context\r\nimport {useProjectDViewContext} from './ProjectDViewContext';\r\n\r\nfunction ProjectDViewHeader() {\r\n    let pdvContext = useProjectDViewContext();\r\n\r\n    return(\r\n        <>\r\n        <Row>\r\n            <Col>\r\n            <Container>\r\n                <ProjectDViewText pdvContext={pdvContext}  />\r\n            </Container>\r\n            </Col>\r\n            <Col>\r\n            <Container>\r\n                {/* Uncomment when other views are functioning */}\r\n                {/* <Col className=\"float-left\"><ProjectDViewDropdown pdvContext={pdvContext}/></Col> */}\r\n                <Col className=\"float-right\"><ProjectDViewButtons /></Col> \r\n            </Container>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectDViewHeader;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport ProjectSpinner from \"../ProjectSpinner.components\";\r\n\r\n// Import CSS for Gantt Chart\r\nimport './ganttChart.css'\r\n\r\nclass GanttChart extends Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.updateGraph = this.updateGraph.bind(this);\r\n      \r\n      this.state = {\r\n          tasks: [],\r\n          taskTypes: [],\r\n          features: [],\r\n          showSpinner: false,\r\n          showInitialMsg: false\r\n      };\r\n   };\r\n\r\n   componentDidMount() {\r\n       this.setState({\r\n           showSpinner: true,\r\n       });\r\n\r\n       // Shows create task msg if spinner still shows after 3000ms / 3 seconds\r\n       setTimeout(\r\n           () => {\r\n           if (this.state.showSpinner == true) {\r\n               this.setState({\r\n                   showSpinner: false,\r\n                   showInitialMsg: true\r\n               })   \r\n           }\r\n       }, 3000);\r\n       \r\n   };\r\n\r\n   componentDidUpdate() {\r\n       /**\r\n        * Update state when props.tasks is updated by parent component\r\n        * First condition triggers upon first update to update state.tasks with props.tasks\r\n        * Subsequent updates check if props has updated since last state update */\r\n       if (this.state.tasks !== this.props.tasks && this.props.tasks.length > 0) {\r\n               this.setState({\r\n                   tasks: this.props.tasks,\r\n                   taskTypes: this.props.taskTypes,\r\n                   features: this.props.features,\r\n                   showSpinner: false\r\n                });\r\n            };\r\n\r\n        /**\r\n         * Run updateGraph only when state.tasks has been updated with props.tasks that has fetched tasks from backend */\r\n        if (this.state.tasks.length > 0) {\r\n           this.updateGraph();\r\n       };\r\n   };\r\n\r\n   updateGraph() {\r\n       //    Assign component props to local variables\r\n       let tasks = this.state.tasks;\r\n       let taskTypes = this.state.taskTypes;\r\n       let features = this.state.features;\r\n\r\n        // Define constants\r\n        // Added extra right margin for legend\r\n       const margin = {\r\n           top: 10, \r\n           right: 200, \r\n           bottom: 30, \r\n           left: 100 \r\n        };\r\n\r\n       const svgHeight = 500;\r\n       const svgWidth = 1140;\r\n\r\n       const height = svgHeight - margin.top - margin.bottom;\r\n       const width = svgWidth - margin.right - margin.left;\r\n\r\n       const barHeight = 20;\r\n\r\n       const legendVMargin = 25;\r\n       const legendHMargin = 20;\r\n       \r\n       const FIT_TIME_DOMAIN_MODE = \"fit\";\r\n       const FIXED_TIME_DOMAIN_MODE = \"fixed\";\r\n\r\n       var taskColours = {\r\n           0: \"bar-feature0\",\r\n           1: \"bar-feature1\",\r\n           2: \"bar-feature2\",\r\n           3: \"bar-feature3\",\r\n           4: \"bar-feature4\"\r\n        };\r\n\r\n       // Create reference to SVG element and assign to var for consistency\r\n       const node = this.node;\r\n       const selector = node;\r\n\r\n       // Define x-axis start and end time, formatting\r\n       var timeDomainStart = d3.timeDay.offset(new Date(), - 5);\r\n       var timeDomainEnd = d3.timeDay.offset(new Date(), + 15);\r\n       var tickFormat= \"%x\";\r\n       var timeDomainMode = FIXED_TIME_DOMAIN_MODE ; // fixed or fit\r\n\r\n       var keyFunction = function(d) {\r\n           return d.startDate + d.name + d.endDate;\r\n        };\r\n\r\n        // Determines location of bars\r\n        var rectTransform = function(d) {\r\n            return \"translate(\" + (x(d3.timeDay.offset(d.startDate, +2))) + \",\" + y(d.name) + \")\";\r\n        };\r\n\r\n        // Define time domain initialization\r\n        var initTimeDomain = function(tasks) {\r\n            if (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\r\n                if (tasks === undefined || tasks.length < 1) {\r\n                    timeDomainStart = d3.timeDay.offset(new Date(), -3);\r\n                    timeDomainEnd = d3.timeHour.offset(new Date(), +3);\r\n                    return;\r\n                };\r\n\r\n                tasks.sort(function(a, b) {\r\n                    return a.endDate - b.endDate;\r\n                });\r\n                \r\n                timeDomainEnd = tasks[tasks.length - 1].endDate;\r\n                \r\n                tasks.sort(function(a, b) {\r\n                    return a.startDate - b.startDate;\r\n                });\r\n                \r\n                timeDomainStart = tasks[0].startDate;\r\n            }\r\n        };\r\n\r\n        // Initiate axes\r\n        var x = d3.scaleTime().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\r\n        var y = d3.scaleBand().domain(taskTypes).rangeRound([0, height - margin.top - margin.bottom]).padding(-0.01 * taskTypes.length);\r\n        \r\n        var xAxis = d3.axisBottom(x).tickFormat(d3.timeFormat(tickFormat)).tickSize(8).tickPadding(8).ticks(d3.timeDay.every(1));\r\n        var yAxis = d3.axisLeft(y).tickSize(8);\r\n\r\n        // Initiate data to plot\r\n        initTimeDomain(tasks);\r\n\r\n        // Define SVG as a G element that translates origin to top-left of chart area\r\n        const chart = d3.select(selector)\r\n            .append(\"svg\")\r\n            .attr(\"class\", \"chart\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n\r\n        // Define graph and shift origin, and assigns 'g' to var svg\r\n        const axes = chart\r\n            .append(\"g\")\r\n            .attr(\"class\", \"gantt-chart\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\")\r\n\r\n        chart.selectAll(\".chart\")\r\n            .data(tasks, keyFunction).enter()\r\n            .append(\"rect\")\r\n            .attr(\"rx\", 5)\r\n            .attr(\"ry\", 5)\r\n            .attr(\"class\", function (d) { \r\n                if(taskColours[d.featureIndex] == null){ \r\n                    return \"bar\";\r\n                };\r\n                return taskColours[d.featureIndex];\r\n            }) \r\n            .attr(\"y\", (height / taskTypes.length) / 2 )\r\n            .attr(\"transform\", rectTransform)\r\n            .attr(\"height\", barHeight)\r\n            .attr(\"width\", function(d) { \r\n                return Math.max(1,(x(d.endDate) - x(d.startDate))); \r\n                });\r\n\r\n        axes\r\n            .append(\"g\")\r\n            .attr(\"class\", \"x axis\")\r\n            .attr(\"transform\", \"translate(0, \" + (height - margin.top - margin.bottom) + \")\")\r\n            .transition()\r\n            .call(xAxis)\r\n            .selectAll(\"text\")\r\n                .style(\"text-anchor\", \"end\")\r\n                .attr(\"dx\", \"-0.8em\")\r\n                .attr(\"dy\", \"0.15em\")\r\n                .attr(\"transform\",\"rotate(-65)\");\r\n            \r\n        axes\r\n            .append(\"g\")\r\n            .attr(\"class\", \"y axis\")\r\n            .transition()\r\n            .call(yAxis);\r\n\r\n        // Try to create legend\r\n        const legend = d3.select(selector)\r\n            .append(\"svg\")\r\n            .attr(\"class\", \"legend\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)                \r\n\r\n        legend\r\n            .selectAll(\".legend\")\r\n            .data(features).enter()\r\n            .append(\"circle\")\r\n                .attr(\"cx\", (svgWidth - margin.right - legendHMargin))\r\n                .attr(\"cy\", (d, index) => {\r\n                    return 100 + index * legendVMargin\r\n                })\r\n                .attr(\"r\", 3)\r\n                .attr(\"class\", (d) => { \r\n                    if(taskColours[d.index] == null){ \r\n                        return \"bar\";\r\n                    };\r\n                    return taskColours[d.index];\r\n                })\r\n\r\n        legend\r\n            .selectAll(\".legend\")\r\n            .data(tasks).enter()\r\n            .append(\"text\")\r\n                .attr(\"x\", (svgWidth - margin.right))\r\n                .attr(\"y\", 60)\r\n                .text(\"LEGEND\")\r\n                .attr(\"text-anchor\", \"left\")\r\n                .attr(\"font-weight\", 600) // set bold\r\n                .attr(\"text-decoration\", \"underline\")\r\n                .attr(\"fill\", \"white\")\r\n                .style(\"alignment-baseline\", \"middle\")\r\n        \r\n        legend\r\n            .selectAll(\".legend\")\r\n            .data(features).enter()\r\n            .append(\"text\")\r\n                .attr(\"x\", (svgWidth - margin.right))\r\n                .attr(\"y\", (d, index) => {\r\n                    return 100 + index * legendVMargin\r\n                })\r\n                .attr(\"class\", (d) => { \r\n                    if(taskColours[d.index] == null){ \r\n                        return \"bar\";\r\n                    };\r\n                    return taskColours[d.index];\r\n                })\r\n                .text((d) => {\r\n                    return d.name\r\n                })\r\n                .attr(\"text-anchor\", \"left\")\r\n                .style(\"alignment-baseline\", \"middle\")\r\n    };\r\n\r\nrender() {\r\n      return (\r\n          <>\r\n          {this.state.showSpinner ? <ProjectSpinner /> : \"\"}\r\n          {this.state.showInitialMsg ? <p>Please create a task.</p> : \"\"}\r\n          <svg \r\n            ref={node => this.node = node} \r\n            width={\"100%\"} \r\n            height={500}></svg>\r\n          </>\r\n      )\r\n   }\r\n};\r\n\r\nexport default GanttChart;","import React from 'react';\r\n\r\nfunction ProjectDViewProjectDashboard() {\r\n    return(\r\n        <>\r\n        <h3>This is a b00tiful Project Dashboard!</h3>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectDViewProjectDashboard;","import moment from 'moment';\r\n\r\n/**\r\n * Custom function to parse dates; convert from string to moment object\r\n * @param {*} input \r\n */\r\nexport const dateStrToMoment = (input) => {\r\n    return moment.utc(input, \"YYYY-MM-DD\"); \r\n  };\r\n\r\n/**\r\n * Custom function to parse dates; convert from string to javascript object\r\n * @param {*} input \r\n */\r\nexport const dateStrToJSDate = (input) => {\r\n    let jsDate = moment.utc(input, \"YYYY-MM-DD\").toDate();\r\n    return jsDate\r\n  };\r\n\r\n\r\n/** \r\n * Custom function that takes in an array, checks the startDate property of each \r\n * element in the array and return the earliest date as a moment object\r\n*/\r\nexport const getEarliestDate = (tasksArray) => {\r\n    let earliestDate = tasksArray[0].startDate;\r\n\r\n    if (tasksArray.length > 1) {\r\n        for (let i = 1; i < tasksArray.length; i++) {\r\n            if ((dateStrToMoment(tasksArray[i].startDate)).isBefore(dateStrToMoment(earliestDate))) {\r\n                earliestDate = tasksArray[i].startDate\r\n            };\r\n        };\r\n    };\r\n    \r\n    return dateStrToMoment(earliestDate);\r\n\r\n};\r\n\r\n/** \r\n * Custom function that takes in an array, checks the endDate property of each \r\n * element in the array and return the latest date as a moment object\r\n*/\r\nexport const getLatestDate = (tasksArray) => {\r\n    let latestDate = tasksArray[0].endDate;\r\n\r\n    if (tasksArray.length > 1) {\r\n        for (let i = 1; i < tasksArray.length; i++) {\r\n            if ((dateStrToMoment(tasksArray[i].endDate)).isAfter(dateStrToMoment(latestDate))) {\r\n                latestDate = tasksArray[i].endDate;\r\n            };\r\n        };\r\n    }\r\n\r\n    return dateStrToMoment(latestDate);\r\n\r\n};","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport axios from 'axios'\r\n \r\nimport ProjectDViewHeader from './ProjectDViewHeader.components';\r\nimport ProjectDViewGantt from './ProjectDViewGantt.components';\r\nimport ProjectDViewRaci from './ProjectDViewRaci.components';\r\nimport ProjectDViewProjectDashboard from './ProjectDViewProjectDashboard.components';\r\nimport TransparentFooter from '../TransparentFooter';\r\n \r\nimport { ProjectDViewProvider } from './ProjectDViewContext';\r\nimport { useAuthContext, fetchUserProfile } from \"../../services/AuthReducer\";\r\nimport { dateStrToJSDate } from '../../services/dateServices';\r\n \r\nfunction ProjectDView(props) {\r\n    const auth = useAuthContext();\r\n    const [projectData, setProjectData] = React.useState(\"\");;\r\n    const [userData, setUserData] = React.useState(\"\")\r\n    let pageHeader = React.createRef();\r\n \r\n    let tasks = [];\r\n    let taskTypes = [];\r\n    let features = [];\r\n\r\n    if (projectData) {\r\n        projectData.features.map((feature, index) => {\r\n            let featureIndex = index;\r\n            features.push(\r\n                {\r\n                    name: feature.name,\r\n                    index: featureIndex\r\n                });\r\n\r\n            feature.tasks.map(task => {\r\n                task.startDate = dateStrToJSDate(task.startDate);\r\n                task.endDate = dateStrToJSDate(task.endDate);\r\n                task.featureIndex = featureIndex;\r\n                tasks.push(task);\r\n            });\r\n        });\r\n\r\n        taskTypes = tasks.map((task) => {\r\n            return task.name;\r\n        });\r\n    };\r\n\r\n    // const renderDiagramInitialState = \"Select your chart.\"\r\n \r\n    // Switch case for graph rendering\r\n    // const renderDiagram = (state, action) => {\r\n    //     switch (action.type) {\r\n    //         case 'Gantt Chart':\r\n    //             return <ProjectDViewGantt tasks={tasks} taskTypes={taskTypes}/>;\r\n    //         case 'RACI Matrix':\r\n    //             return <ProjectDViewRaci />;\r\n    //         case 'Project Dashboard':\r\n    //             return <ProjectDViewProjectDashboard />;\r\n    //         default:\r\n    //             return state;\r\n    //     }\r\n    // };\r\n \r\n    // const [renderDiagramState, renderDiagramDispatch] = React.useReducer(renderDiagram, renderDiagramInitialState);\r\n \r\n    // const renderDiagramGantt = () => {\r\n    //     renderDiagramDispatch({type: 'Gantt Chart'});\r\n    // };\r\n    // const renderDiagramRaci = () => {\r\n    //     renderDiagramDispatch({type: 'RACI Matrix'});\r\n    // };\r\n    // const renderProjectDashboard = () => {\r\n    //     renderDiagramDispatch({type: 'Project Dashboard'});\r\n    // };\r\n \r\n    React.useEffect(() => {\r\n        // Fetch projectData\r\n        const source = axios.CancelToken.source(); // Generate cancellation token\r\n        (async () => {\r\n            try {\r\n                const res = await axios.get(`${process.env.REACT_APP_BASE_SERVER_URL}/projects/find/${props.match.params.projectName}`, \r\n                {\r\n                    withCredentials: true,\r\n                    cancelToken: source.token\r\n                }\r\n                );\r\n \r\n                if (!res.data.error) {\r\n                    setProjectData(res.data);\r\n                };\r\n            } catch (err) {\r\n                if (axios.isCancel(err)) {\r\n                    console.log(\"axios call cancelled\")\r\n                } else {\r\n                    throw err;\r\n                }\r\n            };\r\n        })();\r\n        \r\n        // Fetch userData\r\n        (async () => {\r\n            if (auth.state.isAuthenticated) {\r\n              const user = await fetchUserProfile(auth);\r\n              setUserData({\r\n                'username': user.username,\r\n                'firstname': user.firstname,\r\n                'lastname': user.lastname,\r\n                'position': user.position,\r\n                'projects': user.projects\r\n              });\r\n            }\r\n          })();\r\n        \r\n        document.body.classList.add(\"sidebar-collapse\");\r\n        document.body.classList.add(\"login-page\");\r\n        document.documentElement.classList.remove(\"nav-open\");\r\n      }, [auth, props.match.params.projectName]);\r\n \r\n    return (\r\n    <>\r\n    <div className=\"page-header clear-filter\" filter-color=\"blue\">\r\n        <div className=\"page-header-image\" style={{backgroundImage: \"url(\" + require(\"../../assets/img/header.jpg\") + \")\"}} ref={pageHeader}></div>\r\n        <ProjectDViewProvider value={{\r\n            projectData,\r\n            userData,\r\n            // renderDiagramGantt, \r\n            // renderDiagramRaci,\r\n            // renderProjectDashboard\r\n            }}>\r\n            <Container \r\n            style={{\r\n                marginBottom:\"30px\"\r\n            }}>\r\n                <ProjectDViewHeader />\r\n            </Container>\r\n            <Container \r\n            style={{\r\n                paddingTop:\"40px\"}}>\r\n                <ProjectDViewGantt\r\n                tasks={tasks}\r\n                taskTypes={taskTypes} \r\n                features={features} />\r\n                {/* Uncomment with other views are functioning */}\r\n                {/* {renderDiagramState} */}\r\n            </Container>\r\n        </ProjectDViewProvider>\r\n        <TransparentFooter />\r\n    </div>\r\n    </>\r\n    )\r\n};\r\n \r\nexport default ProjectDView;","import React from \"react\";\r\nimport { Col, Row, Label, Button, Card, CardBody, CardFooter, Form, Input, InputGroup, Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n// Import child components\r\nimport TransparentFooter from './TransparentFooter';\r\nimport SearchBar from './AddUserSearchBar.components';\r\nimport { useAuthContext } from \"../services/AuthReducer\";\r\nimport ProjectSpinner from \"./ProjectSpinner.components\";\r\n\r\nconst EditProject = (props) => {\r\n  let pageHeader = React.createRef();\r\n  const auth = useAuthContext()\r\n\r\n    // Fetch user\r\n    const [projectData, setProjectData] = React.useState({\r\n      \"username\":\"\",\r\n      \"description\":\"\",\r\n      \"members\": [],\r\n      \"admins\": []\r\n    });\r\n\r\n    // Edit project\r\n    const [editProjectState, setEditProjectState] = React.useState(false)\r\n\r\n    // Create state to store entered username and pw\r\n    const [projectNameState, setProjectNameState] = React.useState(\"\");\r\n    const [projectDescriptionState, setProjectDescriptionState] = React.useState(\"\");\r\n    const [membersState, setMembersState] = React.useState([]);\r\n    const [adminsState, setAdminsState] = React.useState([]);\r\n    \r\n    // Create state for focus; leave out for members and admins\r\n    const [projectNameFocus, setProjectNameFocus] = React.useState(false);\r\n    const [projectDescriptionFocus, setProjectDescriptionFocus] = React.useState(false);\r\n\r\n    // Create state for reload\r\n    const onFireReload = () => {\r\n      window.location.reload();\r\n    }\r\n  \r\n    // Define form save functions\r\n    const onChangeProjectNameState = (e) => {\r\n      setProjectNameState(e.target.value);\r\n    };\r\n\r\n    const onChangeProjectDescriptionState = (e) => {\r\n      setProjectDescriptionState(e.target.value)\r\n    };\r\n\r\n    const onChangeMembersState = (newMembersState) => {\r\n      setMembersState(newMembersState);\r\n    };\r\n\r\n    const onChangeAdminsState = (newAdminsState) => {\r\n      setAdminsState(newAdminsState);\r\n    };\r\n\r\n    const onChangeEditProjectState = () => {\r\n      setEditProjectState(!editProjectState);\r\n    };\r\n\r\n    const onUpdateProject = async () => { \r\n      try {\r\n          const res = await axios.post(`${process.env.REACT_APP_BASE_SERVER_URL}/projects/update/all/${props.match.params.projectName}`, {\r\n            \"name\": projectNameState,\r\n            \"description\": projectDescriptionState,\r\n            \"members\": membersState,\r\n            \"admins\": adminsState\r\n          },\r\n          {\r\n            withCredentials: true\r\n          });\r\n    \r\n          if (!res.data.error) {\r\n            onFireReload();\r\n    \r\n        }} catch (err) {\r\n          console.log(err)\r\n        }\r\n      }; \r\n  \r\n    // Additional form features\r\n    React.useEffect(() => {\r\n      document.body.classList.add(\"login-page\");\r\n      document.body.classList.add(\"sidebar-collapse\");\r\n      document.documentElement.classList.remove(\"nav-open\");\r\n      window.scrollTo(0, 0);\r\n      document.body.scrollTop = 0;\r\n\r\n      // Fetch projectData\r\n      const source = axios.CancelToken.source(); // Generate cancellation token\r\n      (async () => {\r\n          try {\r\n              const res = await axios.get(`${process.env.REACT_APP_BASE_SERVER_URL}/projects/find/${props.match.params.projectName}`, \r\n              {\r\n                  withCredentials: true,\r\n                  cancelToken: source.token\r\n              }\r\n              );\r\n\r\n              if (!res.data.error) {\r\n                  setProjectData(res.data);\r\n              };\r\n          } catch (err) {\r\n              if (axios.isCancel(err)) {\r\n                  console.log(\"axios call cancelled\")\r\n              } else {\r\n                  throw err;\r\n              }\r\n          };\r\n      })();\r\n\r\n      return function cleanup() {\r\n        document.body.classList.remove(\"login-page\");\r\n        document.body.classList.remove(\"sidebar-collapse\");\r\n      };\r\n\r\n    }, []);\r\n\r\n  return (\r\n    <>\r\n    <div \r\n    className=\"page-header clear-filter\" \r\n    filter-color=\"blue\">\r\n      <div \r\n      className=\"page-header-image\" \r\n      style={{backgroundImage: \"url(\" + require(\"../assets/img/header.jpg\") + \")\"}} \r\n      ref={pageHeader}></div>\r\n        <Container>\r\n          <h1 \r\n          className=\"float-left\">Edit Project</h1>\r\n        </Container>\r\n        <Container>\r\n          <Col \r\n          className=\"mr-auto\" \r\n          md=\"6\">\r\n            <Card \r\n            className=\"card-plain\">\r\n              <Form \r\n              action=\"\" \r\n              className=\"form\" \r\n              method=\"\">\r\n                <CardBody>\r\n                  <Label \r\n                  className=\"float-left\">\r\n                    <h6>Project Name</h6>\r\n                  </Label>\r\n                  <InputGroup \r\n                  className={\"no-border input-lg\" + (projectNameFocus ?  \"input-group-focus\" : \"\")}>\r\n                  <h5 \r\n                  hidden={editProjectState}>{projectData.name ? projectData.name : <ProjectSpinner />}</h5>\r\n                    <Input \r\n                    hidden={!editProjectState}\r\n                    value={projectData.name}\r\n                    type=\"text\"\r\n                    onChange={(e)=>onChangeProjectNameState(e)}\r\n                    onFocus={() => setProjectNameFocus(true)}\r\n                    onBlur={() => setProjectNameFocus(false)}></Input>\r\n                  </InputGroup>\r\n                  <Label \r\n                  className=\"float-left\"><h6>Project Description</h6></Label>\r\n                  <InputGroup \r\n                  className={\"no-border input-lg\" + (projectDescriptionFocus ? \" input-group-focus\" : \"\")}>\r\n                    <h5\r\n                    hidden={editProjectState}>{projectData.description ? projectData.description : <ProjectSpinner />}</h5>\r\n                    <Input\r\n                    hidden={!editProjectState}\r\n                    value={projectData.description}\r\n                    type=\"textarea\" \r\n                    onChange={(e)=>onChangeProjectDescriptionState(e)}\r\n                    onFocus={() => setProjectDescriptionFocus(true)}\r\n                    onBlur={() => setProjectDescriptionFocus(false)}></Input>\r\n                  </InputGroup>\r\n                  <Label className=\"float-left\"><h6>Members</h6></Label>\r\n                  <InputGroup>\r\n                    { editProjectState ? \r\n                    <SearchBar \r\n                    hidden={!editProjectState}\r\n                    onChangeParentCompUsersState={onChangeMembersState} \r\n                    searchBarId={1}/> : \r\n                    projectData.members.map(member => {\r\n                      return <Col key={member}>{member}</Col>\r\n                      })}\r\n                  </InputGroup>\r\n                  <Label className=\"float-left\"><h6>Admins</h6></Label>\r\n                  <InputGroup>\r\n                  { editProjectState ? \r\n                    <SearchBar \r\n                    hidden={!editProjectState}\r\n                    onChangeParentCompUsersState={onChangeAdminsState} \r\n                    searchBarId={2}/> : \r\n                    projectData.admins.map(admin => {\r\n                      return <Col key={admin}>{admin}</Col>\r\n                      })}\r\n                  </InputGroup>\r\n                </CardBody>\r\n                <CardFooter className=\"text-center\">\r\n                  <Button \r\n                  outline \r\n                  className=\"btn-round\" \r\n                  size=\"lg\"\r\n                  onClick={onChangeEditProjectState}>{editProjectState ? (\"Save Project\") : (\"Edit Project\")}</Button>\r\n                  <Link to=\"/dashboard\"><Button \r\n                  outline \r\n                  className=\"btn-round\" \r\n                  size=\"lg\">Return to Dashboard</Button>\r\n                  </Link>\r\n                </CardFooter>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Container>\r\n        <TransparentFooter />\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProject;","// Handles any route that requires authentication\r\n\r\nimport React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuthContext} from '../services/AuthReducer'\r\n\r\nconst PrivateRoute = ({\r\n    component: Component, ...rest\r\n}) => {\r\n    const auth = useAuthContext();\r\n    return(\r\n        <Route \r\n        {...rest} \r\n        render = {\r\n            (props) => \r\n            auth.state.isAuthenticated ? (<Component {...props}/>) : (<Redirect to=\"/login\" />)\r\n        } />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\n\r\n// import logo from './logo.svg';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Import public components\r\nimport Navbar from \"./components/Navbar.components\"\r\nimport HomePublic from \"./components/HomePublic.components\"\r\nimport LoginPublic from \"./components/LoginPublic.components\"\r\nimport Register from \"./components/RegisterPublic.components\"\r\nimport About from \"./components/About.components.js\"\r\n\r\n// Import private components\r\nimport TeamsPrivate from \"./components/TeamsPrivate.components\"\r\nimport ProjectsPrivate from \"./components/ProjectsPrivate.components\"\r\nimport DashboardPrivate from \"./components/DashboardPrivate.components\"\r\nimport ProfilePrivate from \"./components/ProfilePrivate.components\"\r\nimport AddNewProject from \"./components/AddNewProject.components\"\r\nimport ProjectDView from \"./components/projectDView/ProjectDView.components\"\r\nimport EditProject from \"./components/EditProject.components\"\r\n\r\n// Import auth components\r\nimport PrivateRoute from \"./components/PrivateRoute.components\"\r\nimport {AuthContext} from \"./services/AuthReducer\"\r\nimport {authInitialState, authReducer} from \"./services/AuthReducer\"\r\n\r\nfunction App() {\r\n  const [state, dispatch] = React.useReducer(authReducer, authInitialState)\r\n\r\n  return (\r\n    // Map url paths to diff. components to load on page\r\n    <AuthContext.Provider value={{\r\n      state,\r\n      handleLogin: () => dispatch({type: 'login'}),\r\n      handleLogout: () => dispatch({type: 'logout'})\r\n      }}>\r\n      <Router>\r\n        <Route path=\"/\" component={Navbar} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/\" component={HomePublic} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={LoginPublic} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={DashboardPrivate} />\r\n        <PrivateRoute exact path=\"/teams\" component={TeamsPrivate} />\r\n        <PrivateRoute exact path=\"/projects\" component={ProjectsPrivate} />\r\n        <PrivateRoute exact path=\"/profile\" component={ProfilePrivate} />\r\n        <PrivateRoute exact path=\"/addproject\" component={AddNewProject} />\r\n        <PrivateRoute exact path=\"/projects/:projectName\" component={ProjectDView}/>\r\n        <PrivateRoute exact path=\"/editproject/:projectName\" component={EditProject}/>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n    );\r\n  }\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// Import UI Kit React templates\nimport \"./assets/css/now-ui-kit.css\";\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header.ffcc99c4.jpg\";"],"sourceRoot":""}